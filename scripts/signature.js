// Generated by dart2js (fast startup emitter, strong), the Dart to JavaScript compiler version: 2.12.0-29.10.beta.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  // Add this below to the dart2js generated files if it requires 
  // random numbers. You can use similar to this below:
  // ```bash
  // for i in $(ls -1 ../example/); 
  // do 
  //   B=$(basename $i .dart)
  //   O="$B.js"
  //   dart2js ../example/$i -o "$B.js"
  //   sed -i '/^(function dartProgram() {/r ../tool/dart_crypto.js' "$B.js"
  // done```
  //
  var self = typeof self !== 'undefined' ? self : Object.create(global);
  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;

  var _randomBytes;

  if (!(crypto && crypto.getRandomValues) && typeof require !== 'undefined') {
    // Node.js.
    crypto = require('crypto');
    if (crypto && crypto.randomBytes) {
      _randomBytes = function (x, n) {
        var i, v = crypto.randomBytes(n);
        for (i = 0; i < n; i++) x[i] = v[i];
        for (i = 0; i < n; i++) v[i] = 0;
      };

      crypto.getRandomValues = function _randomValues(t) {
        _randomBytes(t, t.length);
      }
    }
  }

  self.crypto = typeof self.crypto !== 'undefined' ? self.crypto : crypto;  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function setFunctionNamesIfNecessary(holders) {
    function t() {
    }
    ;
    if (typeof t.name == "string")
      return;
    for (var i = 0; i < holders.length; i++) {
      var holder = holders[i];
      var keys = Object.keys(holder);
      for (var j = 0; j < keys.length; j++) {
        var key = keys[j];
        var f = holder[key];
        if (typeof f == 'function')
          f.name = key;
      }
    }
  }
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        cls.prototype.__proto__ = sup.prototype;
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++)
      inherit(classes[i], sup);
  }
  function mixin(cls, mixin) {
    copyProperties(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazyOld(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      holder[getterName] = function() {
        H.throwCyclicInit(name);
      };
      var result;
      var sentinelInProgress = initializer;
      try {
        if (holder[name] === uninitializedSentinel) {
          result = holder[name] = sentinelInProgress;
          result = holder[name] = initializer();
        } else
          result = holder[name];
      } finally {
        if (result === sentinelInProgress)
          holder[name] = null;
        holder[getterName] = function() {
          return this[name];
        };
      }
      return result;
    };
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel)
        holder[name] = initializer();
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel)
          H.throwLateInitializationError(name);
        holder[name] = value;
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i)
      convertToFastObject(arrayOfObjects[i]);
  }
  var functionCounter = 0;
  function tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted) {
    return isIntercepted ? new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(receiver) {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, true, name);" + "return new c(this, funcs[0], receiver, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null) : new Function("funcs", "applyTrampolineIndex", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = " + "H.closureFromTearOff" + "(" + "this, funcs, applyTrampolineIndex, reflectionInfo, false, false, name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, applyTrampolineIndex, reflectionInfo, name, H, null);
  }
  function tearOff(funcs, applyTrampolineIndex, reflectionInfo, isStatic, name, isIntercepted) {
    var cache = null;
    return isStatic ? function() {
      if (cache === null)
        cache = H.closureFromTearOff(this, funcs, applyTrampolineIndex, reflectionInfo, true, false, name).prototype;
      return cache;
    } : tearOffGetter(funcs, applyTrampolineIndex, reflectionInfo, name, isIntercepted);
  }
  var typesOffset = 0;
  function installTearOff(container, getterName, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var funs = [];
    for (var i = 0; i < funsOrNames.length; i++) {
      var fun = funsOrNames[i];
      if (typeof fun == 'string')
        fun = container[fun];
      fun.$callName = callNames[i];
      funs.push(fun);
    }
    var fun = funs[0];
    fun.$requiredArgCount = requiredParameterCount;
    fun.$defaultValues = optionalParameterDefaultValues;
    var reflectionInfo = funType;
    if (typeof reflectionInfo == "number")
      reflectionInfo += typesOffset;
    var name = funsOrNames[0];
    fun.$stubName = name;
    var getterFunction = tearOff(funs, applyIndex || 0, reflectionInfo, isStatic, name, isIntercepted);
    container[getterName] = getterFunction;
    if (isStatic)
      fun.$tearOff = getterFunction;
  }
  function installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    return installTearOff(container, getterName, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex);
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixin, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, setFunctionNamesIfNecessary: setFunctionNamesIfNecessary, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  function getGlobalFromName(name) {
    for (var i = 0; i < holders.length; i++) {
      if (holders[i] == C)
        continue;
      if (holders[i][name])
        return holders[i][name];
    }
  }
  var C = {},
  H = {JS_CONST: function JS_CONST() {
    },
    SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
      P.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        P.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          H.throwExpression(P.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new H.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _._iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S: function(value) {
      var res;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0$(value);
      return res;
    },
    Primitives_objectTypeName: function(object) {
      return H.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti: function(object) {
      var dispatchName, $constructor, constructorName;
      if (object instanceof P.Object)
        return H._rtiToString(H.instanceType(object), null);
      if (J.getInterceptor$(object) === C.Interceptor_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = C.C_JS_CONST(object);
        if (H.Primitives__saneNativeClassName(dispatchName))
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && H.Primitives__saneNativeClassName(constructorName))
            return constructorName;
        }
      }
      return H._rtiToString(H.instanceType(object), null);
    },
    Primitives__saneNativeClassName: function($name) {
      var t1 = $name !== "Object" && $name !== "";
      return t1;
    },
    iae: function(argument) {
      throw H.wrapException(H.argumentErrorValue(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      throw H.wrapException(H.diagnoseIndexError(receiver, index));
    },
    diagnoseIndexError: function(indexable, index) {
      var $length, _s5_ = "index";
      if (!H._isInt(index))
        return new P.ArgumentError(true, index, _s5_, null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return P.IndexError$(index, indexable, _s5_, null, $length);
      return P.RangeError$value(index, _s5_);
    },
    argumentErrorValue: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    wrapException: function(ex) {
      var wrapper, t1;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      t1 = H.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper: function() {
      return J.toString$0$(this.dartException);
    },
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(P.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern: function(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = H.quoteStringForRegExp(message.replace(String({}), '$receiver$'));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = H.setRuntimeTypeInfo([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new H.TypeErrorDecoder(message.replace(new RegExp('\\\\\\$arguments\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$argumentsExpr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$expr\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$method\\\\\\$', 'g'), '((?:x|[^x])*)').replace(new RegExp('\\\\\\$receiver\\\\\\$', 'g'), '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn: function(expression) {
      return function($expr$) {
        var $argumentsExpr$ = '$arguments$';
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    NullError$: function(_message, match) {
      return new H.NullError(_message, match == null ? null : match.method);
    },
    JsNoSuchMethodError$: function(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException: function(ex) {
      if (ex == null)
        return new H.NullThrownFromJavaScriptException(ex);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return H.saveStackTrace(ex, ex.dartException);
      return H._unwrapNonDartException(ex);
    },
    saveStackTrace: function(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException: function(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, t1, _null = null;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return H.saveStackTrace(ex, H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
            case 445:
            case 5007:
              return H.saveStackTrace(ex, H.NullError$(H.S(message) + " (Error " + ieErrorCode + ")", _null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return H.saveStackTrace(ex, H.JsNoSuchMethodError$(H._asString(message), match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return H.saveStackTrace(ex, H.JsNoSuchMethodError$(H._asString(message), match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t1 = match != null;
                        } else
                          t1 = true;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
            if (t1)
              return H.saveStackTrace(ex, H.NullError$(H._asString(message), match));
          }
        }
        return H.saveStackTrace(ex, new H.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return H.saveStackTrace(ex, new P.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    Closure_fromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, propertyName) {
      var $constructor, t1, trampoline, applyTrampoline, i, stub, stubCallName,
        $function = functions[0],
        callName = $function.$callName,
        $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, "").constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function static_tear_off() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        t1 = new Function("a,b,c,d" + t1, "this.$initialize(a,b,c,d" + t1 + ")");
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      if (!isStatic) {
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$static_name = propertyName;
        trampoline = $function;
      }
      type$.Object._as(reflectionInfo);
      $prototype.$signature = H.Closure__computeSignatureFunctionNewRti(reflectionInfo, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < functions.length; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          stub = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex) {
          stub.$reflectionInfo = reflectionInfo;
          applyTrampoline = stub;
        }
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti: function(functionType, isStatic, isIntercepted) {
      var typeEvalMethod;
      if (typeof functionType == "number")
        return function(getType, t) {
          return function() {
            return getType(t);
          };
        }(H.getTypeFromTypesTable, functionType);
      if (typeof functionType == "string") {
        if (isStatic)
          throw H.wrapException("Cannot compute signature for static tearoff.");
        typeEvalMethod = isIntercepted ? H.BoundClosure_evalRecipeIntercepted : H.BoundClosure_evalRecipe;
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, typeEvalMethod);
      }
      throw H.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, selfName, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.Closure_functionCounter;
        if (typeof t1 !== "number")
          return t1.$add();
        $.Closure_functionCounter = t1 + 1;
        selfName = "self" + t1;
        return new Function("return function(){var " + selfName + " = this." + H.BoundClosure_selfFieldName() + ";return " + selfName + "." + H.S(stubName) + "();}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = $.Closure_functionCounter;
      if (typeof t1 !== "number")
        return t1.$add();
      $.Closure_functionCounter = t1 + 1;
      $arguments += t1;
      return new Function("return function(" + $arguments + "){return this." + H.BoundClosure_selfFieldName() + "." + H.S(stubName) + "(" + $arguments + ");}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf = H.BoundClosure_selfOf,
        getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(new H.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var stubName, arity, lookedUpFunction, t1, t2, $arguments,
        selfField = H.BoundClosure_selfFieldName(),
        receiverField = $.BoundClosure_receiverFieldNameCache;
      if (receiverField == null)
        receiverField = $.BoundClosure_receiverFieldNameCache = H.BoundClosure_computeFieldNamed("receiver");
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 28;
      if (t2)
        return H.Closure_cspForwardInterceptedCall(arity, !t1, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + selfField + "." + H.S(stubName) + "(this." + receiverField + ");";
        t2 = $.Closure_functionCounter;
        if (typeof t2 !== "number")
          return t2.$add();
        $.Closure_functionCounter = t2 + 1;
        return new Function(t1 + t2 + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + selfField + "." + H.S(stubName) + "(this." + receiverField + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      if (typeof t2 !== "number")
        return t2.$add();
      $.Closure_functionCounter = t2 + 1;
      return new Function(t1 + t2 + "}")();
    },
    closureFromTearOff: function(receiver, functions, applyTrampolineIndex, reflectionInfo, isStatic, isIntercepted, $name) {
      return H.Closure_fromTearOff(receiver, functions, applyTrampolineIndex, reflectionInfo, !!isStatic, !!isIntercepted, $name);
    },
    BoundClosure_evalRecipe: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._self), recipe);
    },
    BoundClosure_evalRecipeIntercepted: function(closure, recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, H.instanceType(closure._receiver), recipe);
    },
    BoundClosure_selfOf: function(closure) {
      return closure._self;
    },
    BoundClosure_receiverOf: function(closure) {
      return closure._receiver;
    },
    BoundClosure_selfFieldName: function() {
      var t1 = $.BoundClosure_selfFieldNameCache;
      return t1 == null ? $.BoundClosure_selfFieldNameCache = H.BoundClosure_computeFieldNamed("self") : t1;
    },
    BoundClosure_computeFieldNamed: function(fieldName) {
      var t1, i, $name,
        template = new H.BoundClosure("self", "target", "receiver", "name"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw H.wrapException(P.ArgumentError$("Field name " + fieldName + " not found."));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    throwLateInitializationError: function($name) {
      return H.throwExpression(new H.LateError($name));
    },
    lookupAndCacheInterceptor: function(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = H._asString($.getTagFunction.call$1(obj)),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = H._asStringQ($.alternateTagFunction.call$2(obj, tag));
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(P.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return H.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = C.C_JS_CONST0();
      hooks = H.applyHooksTransformer(C.C_JS_CONST1, H.applyHooksTransformer(C.C_JS_CONST2, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST3, H.applyHooksTransformer(C.C_JS_CONST4, H.applyHooksTransformer(C.C_JS_CONST5, H.applyHooksTransformer(C.C_JS_CONST6(C.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    quoteStringForRegExp: function(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
      var _ = this;
      _.__js_helper$_length = t0;
      _._jsObject = t1;
      _._keys = t2;
      _.$ti = t3;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError(t0, t1) {
      this.__js_helper$_message = t0;
      this._method = t1;
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    Closure: function Closure() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1, t2, t3) {
      var _ = this;
      _._self = t0;
      _._target = t1;
      _._receiver = t2;
      _._name = t3;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _checkLength: function($length) {
      return $length;
    },
    _ensureNativeList: function(list) {
      var t1, result, i;
      if (type$.JSIndexable_dynamic._is(list))
        return list;
      t1 = J.getInterceptor$asx(list);
      result = P.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
      for (i = 0; i < t1.get$length(list); ++i)
        C.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
      return result;
    },
    _checkValidIndex: function(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw H.wrapException(H.diagnoseIndexError(list, index));
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar: function(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = H._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr: function(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = H._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType: function(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return H.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 11 || kind === 12;
    },
    Rti__getCanonicalRecipe: function(rti) {
      return rti._canonicalRecipe;
    },
    findType: function(recipe) {
      return H._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute: function(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = H._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return H._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = H._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return H._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = H._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return H._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          returnType = rti._primary;
          substitutedReturnType = H._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = H._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return H._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 12:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = H._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 13:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw H.wrapException(P.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray: function(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(substitutedRti);
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed: function(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = [];
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = H._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.push(t1);
        result.push(t2);
        result.push(substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters: function(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = H._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = H._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = H._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new H._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    setRuntimeTypeInfo: function(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType: function(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return H.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType: function(object, testRti) {
      var rti;
      if (H.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof H.Closure) {
          rti = H.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return H.instanceType(object);
    },
    instanceType: function(object) {
      var rti;
      if (object instanceof P.Object) {
        rti = object.$ti;
        return rti != null ? rti : H._instanceTypeFromConstructor(object);
      }
      if (Array.isArray(object))
        return H._arrayInstanceType(object);
      return H._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType: function(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType: function(object) {
      var rti = object.$ti;
      return rti != null ? rti : H._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor: function(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return H._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss: function(instance, $constructor) {
      var effectiveConstructor = instance instanceof H.Closure ? instance.__proto__.__proto__.constructor : $constructor,
        rti = H._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable: function(index) {
      var table, type, rti;
      H._asInt(index);
      table = init.types;
      type = table[index];
      if (typeof type == "string") {
        rti = H._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    _installSpecializedIsTest: function(object) {
      var t1, unstarred, isFn, testRti = this;
      if (testRti === type$.Object)
        return H._finishIsFn(testRti, object, H._isObject);
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return H._finishIsFn(testRti, object, H._isTop);
      t1 = testRti._kind;
      unstarred = t1 === 6 ? testRti._primary : testRti;
      if (unstarred === type$.int)
        isFn = H._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = H._isNum;
      else if (unstarred === type$.String)
        isFn = H._isString;
      else
        isFn = unstarred === type$.bool ? H._isBool : null;
      if (isFn != null)
        return H._finishIsFn(testRti, object, isFn);
      if (unstarred._kind === 9) {
        t1 = unstarred._primary;
        if (unstarred._rest.every(H.isTopType)) {
          testRti._specializedTestResource = "$is" + t1;
          return H._finishIsFn(testRti, object, H._isTestViaProperty);
        }
      } else if (t1 === 7)
        return H._finishIsFn(testRti, object, H._generalNullableIsTestImplementation);
      return H._finishIsFn(testRti, object, H._generalIsTestImplementation);
    },
    _finishIsFn: function(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck: function(object) {
      var t1, testRti = this,
        asFn = H._generalAsCheckImplementation;
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        asFn = H._asTop;
      else if (testRti === type$.Object)
        asFn = H._asObject;
      else {
        t1 = H.isNullable(testRti);
        if (t1)
          asFn = H._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs: function(testRti) {
      var t1,
        kind = testRti._kind;
      if (!H.isStrongTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              t1 = kind === 8 && H._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _generalIsTestImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return H._nullIs(testRti);
      return H._isSubtype(init.typeUniverse, H.instanceOrFunctionType(object, testRti), null, testRti, null);
    },
    _generalNullableIsTestImplementation: function(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty: function(object) {
      var tag, testRti = this;
      if (object == null)
        return H._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof P.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation: function(object) {
      var t1, testRti = this;
      if (object == null) {
        t1 = H.isNullable(testRti);
        if (t1)
          return object;
      } else if (testRti._is(object))
        return object;
      H._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation: function(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      H._failedAsCheck(object, testRti);
    },
    _failedAsCheck: function(object, testRti) {
      throw H.wrapException(H._TypeError$fromMessage(H._Error_compose(object, H.instanceOrFunctionType(object, testRti), H._rtiToString(testRti, null))));
    },
    _Error_compose: function(object, objectRti, checkedTypeDescription) {
      var objectDescription = P.Error_safeToString(object),
        objectTypeDescription = H._rtiToString(objectRti == null ? H.instanceType(object) : objectRti, null);
      return objectDescription + ": type '" + objectTypeDescription + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage: function(message) {
      return new H._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType: function(object, type) {
      return new H._TypeError("TypeError: " + H._Error_compose(object, null, type));
    },
    _isObject: function(object) {
      return object != null;
    },
    _asObject: function(object) {
      if (object != null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop: function(object) {
      return true;
    },
    _asTop: function(object) {
      return object;
    },
    _isBool: function(object) {
      return true === object || false === object;
    },
    _asBool: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ: function(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt: function(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ: function(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum: function(object) {
      return typeof object == "number";
    },
    _asNum: function(object) {
      if (typeof object == "number")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ: function(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "num?"));
    },
    _isString: function(object) {
      return typeof object == "string";
    },
    _asString: function(object) {
      if (typeof object == "string")
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ: function(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw H.wrapException(H._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString: function(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + H._rtiToString(array[i], genericContext);
      return s;
    },
    _functionRtiToString: function(functionType, genericContext, bounds) {
      var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null) {
          genericContext = H.setRuntimeTypeInfo([], type$.JSArray_String);
          outerContextLength = null;
        } else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          C.JSArray_methods.add$1(genericContext, "T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText += typeSep;
          t3 = genericContext.length;
          t4 = t3 - 1 - i;
          if (t4 < 0)
            return H.ioore(genericContext, t4);
          typeParametersText = C.JSString_methods.$add(typeParametersText, genericContext[t4]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            if (!(boundRti === t2))
              t3 = false;
            else
              t3 = true;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + H._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else {
        typeParametersText = "";
        outerContextLength = null;
      }
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = H._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + H._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + H._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += H._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString: function(rti, genericContext) {
      var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6) {
        s = H._rtiToString(rti._primary, genericContext);
        return s;
      }
      if (kind === 7) {
        questionArgument = rti._primary;
        s = H._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + H._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = H._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length !== 0 ? $name + ("<" + H._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return H._functionRtiToString(rti, genericContext, null);
      if (kind === 12)
        return H._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 13) {
        t1 = rti._primary;
        t2 = genericContext.length;
        t1 = t2 - 1 - t1;
        if (t1 < 0 || t1 >= t2)
          return H.ioore(genericContext, t1);
        return genericContext[t1];
      }
      return "?";
    },
    _unminifyOrTag: function(rawClassName) {
      var preserved = H.unmangleGlobalNameIfPreservedAnyways(rawClassName);
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule: function(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType: function(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return H._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = H._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = [];
        for (i = 0; i < $length; ++i)
          $arguments.push(erased);
        $interface = H._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules: function(universe, rules) {
      return H._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes: function(universe, types) {
      return H._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval: function(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Parser_parse(H._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment: function(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = H._Parser_parse(H._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind: function(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = H._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests: function(universe, rti) {
      rti._as = H._installSpecializedAsCheck;
      rti._is = H._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti: function(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new H.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti: function(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && H.isNullable(baseType._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && H.isNullable(starArgument._primary))
            return starArgument;
          else
            return H.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti: function(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti: function(universe, baseType, key, normalize) {
      var t1, t2, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (!H.isStrongTopType(baseType))
          if (!(baseType === type$.legacy_Object))
            t2 = false;
          else
            t2 = true;
        else
          t2 = true;
        if (t2 || baseType === type$.Object)
          return baseType;
        else if (t1 === 1)
          return H._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new H.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti: function(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 13;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin: function($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed: function($arguments) {
      var s, sep, i, t1, nameSep, s0,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s0 = $arguments[i + 2]._canonicalRecipe;
        s += sep + t1 + nameSep + s0;
      }
      return s;
    },
    _Universe__lookupInterfaceRti: function(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length !== 0)
        s += "<" + H._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti: function(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + H._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti: function(universe, returnType, parameters) {
      var sep, t1, key, probe, rti,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + H._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        t1 = H._Universe__canonicalRecipeJoin(optionalPositional);
        recipe += sep + "[" + t1 + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        t1 = H._Universe__canonicalRecipeJoinNamed(named);
        recipe += sep + "{" + t1 + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new H.Rti(null, null);
      rti._kind = 11;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = H._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti: function(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + H._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = H._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti: function(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = new Array($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = H._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = H._substituteArray(universe, bounds, typeArguments, 0);
          return H._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new H.Rti(null, null);
      rti._kind = 12;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return H._Universe__installTypeTests(universe, rti);
    },
    _Parser_create: function(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse: function(parser) {
      var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = H._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
          i = H._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = H._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(H._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(H._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(H._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              t3 = parser.u;
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              head = t1.pop();
              if (typeof head == "string")
                t1.push(H._Universe__lookupInterfaceRti(t3, head, array));
              else {
                base = H._Parser_toType(t3, parser.e, head);
                switch (base._kind) {
                  case 11:
                    t1.push(H._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                    break;
                  default:
                    t1.push(H._Universe__lookupBindingRti(t3, base, array));
                    break;
                }
              }
              break;
            case 38:
              H._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(H._Universe__lookupStarRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(H._Universe__lookupQuestionRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(H._Universe__lookupFutureOrRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              t3 = parser.u;
              parameters = new H._FunctionParameters();
              optionalPositional = t3.sEA;
              named = t3.sEA;
              head = t1.pop();
              if (typeof head == "number")
                switch (head) {
                  case -1:
                    optionalPositional = t1.pop();
                    break;
                  case -2:
                    named = t1.pop();
                    break;
                  default:
                    t1.push(head);
                    break;
                }
              else
                t1.push(head);
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              parameters._requiredPositional = array;
              parameters._optionalPositional = optionalPositional;
              parameters._named = named;
              t1.push(H._Universe__lookupFunctionRti(t3, H._Parser_toType(t3, parser.e, t1.pop()), parameters));
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              H._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              H._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return H._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit: function(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier: function(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = H._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          H.throwExpression('No "' + string + '" in "' + H.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(H._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleExtendedOperations: function(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(H._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw H.wrapException(P.AssertionError$("Unexpected extended operation " + H.S($top)));
    },
    _Parser_toType: function(universe, environment, item) {
      if (typeof item == "string")
        return H._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number")
        return H._Parser_indexToType(universe, environment, item);
      else
        return item;
    },
    _Parser_toTypes: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed: function(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = H._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType: function(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw H.wrapException(P.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw H.wrapException(P.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    _isSubtype: function(universe, s, sEnv, t, tEnv) {
      var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!H.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (H.isStrongTopType(s))
        return false;
      if (s._kind !== 1)
        t1 = false;
      else
        t1 = true;
      if (t1)
        return true;
      leftTypeVariable = sKind === 13;
      if (leftTypeVariable)
        if (H._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return H._isSubtype(universe, s, sEnv, t._primary, tEnv);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        if (sKind === 6)
          return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
        return sKind !== 7;
      }
      if (sKind === 6)
        return H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (tKind === 6) {
        t1 = H.Rti__getQuestionFromStar(universe, t);
        return H._isSubtype(universe, s, sEnv, t1, tEnv);
      }
      if (sKind === 8) {
        if (!H._isSubtype(universe, s._primary, sEnv, t, tEnv))
          return false;
        return H._isSubtype(universe, H.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
      }
      if (sKind === 7) {
        t1 = H._isSubtype(universe, type$.Null, sEnv, t, tEnv);
        return t1 && H._isSubtype(universe, s._primary, sEnv, t, tEnv);
      }
      if (tKind === 8) {
        if (H._isSubtype(universe, s, sEnv, t._primary, tEnv))
          return true;
        return H._isSubtype(universe, s, sEnv, H.Rti__getFutureFromFutureOr(universe, t), tEnv);
      }
      if (tKind === 7) {
        t1 = H._isSubtype(universe, s, sEnv, type$.Null, tEnv);
        return t1 || H._isSubtype(universe, s, sEnv, t._primary, tEnv);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 11;
      if ((!t1 || sKind === 12) && t === type$.Function)
        return true;
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 12)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!H._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !H._isSubtype(universe, tBound, tEnv, sBound, sEnv))
            return false;
        }
        return H._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
      }
      if (tKind === 11) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return H._isFunctionSubtype(universe, s, sEnv, t, tEnv);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return H._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
      }
      return false;
    },
    _isFunctionSubtype: function(universe, s, sEnv, t, tEnv) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!H._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!H._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!H._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!H._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype: function(universe, s, sEnv, t, tEnv) {
      var sArgs, tArgs, $length, i, t1, t2, rule, supertypeArgs,
        sName = s._primary,
        tName = t._primary;
      if (sName === tName) {
        sArgs = s._rest;
        tArgs = t._rest;
        $length = sArgs.length;
        for (i = 0; i < $length; ++i) {
          t1 = sArgs[i];
          t2 = tArgs[i];
          if (!H._isSubtype(universe, t1, sEnv, t2, tEnv))
            return false;
        }
        return true;
      }
      if (t === type$.Object)
        return true;
      rule = H._Universe_findRule(universe, sName);
      if (rule == null)
        return false;
      supertypeArgs = rule[tName];
      if (supertypeArgs == null)
        return false;
      $length = supertypeArgs.length;
      tArgs = t._rest;
      for (i = 0; i < $length; ++i)
        if (!H._isSubtype(universe, H._Universe_evalInEnvironment(universe, s, supertypeArgs[i]), sEnv, tArgs[i], tEnv))
          return false;
      return true;
    },
    isNullable: function(t) {
      var t1,
        kind = t._kind;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!H.isStrongTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && H.isNullable(t._primary)))
              t1 = kind === 8 && H.isNullable(t._primary);
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isTopType: function(t) {
      var t1;
      if (!H.isStrongTopType(t))
        if (!(t === type$.legacy_Object))
          t1 = false;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    isStrongTopType: function(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign: function(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    unmangleGlobalNameIfPreservedAnyways: function($name) {
      return init.mangledGlobalNames[$name];
    },
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  },
  J = {
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var proto, objectProto, $constructor, interceptor,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(P.UnimplementedError$("Return interceptor for " + H.S(proto(object, record))));
      }
      $constructor = object.constructor;
      interceptor = $constructor == null ? null : $constructor[J.JS_INTEROP_INTERCEPTOR_TAG()];
      if (interceptor != null)
        return interceptor;
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return C.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return C.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return C.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        Object.defineProperty($constructor, J.JS_INTEROP_INTERCEPTOR_TAG(), {value: C.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return C.UnknownJavaScriptObject_methods;
      }
      return C.UnknownJavaScriptObject_methods;
    },
    JS_INTEROP_INTERCEPTOR_TAG: function() {
      var t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
      return t1 == null ? $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js") : t1;
    },
    JSArray_JSArray$fixed: function($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw H.wrapException(P.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable: function($length, $E) {
      if ($length < 0)
        throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + $length));
      return H.setRuntimeTypeInfo(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed: function(allocation, $E) {
      return J.JSArray_markFixedList(H.setRuntimeTypeInfo(allocation, $E._eval$1("JSArray<0>")), $E);
    },
    JSArray_markFixedList: function(list, $T) {
      list.fixed$length = Array;
      return list;
    },
    getInterceptor$: function(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSDouble.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx: function(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax: function(receiver) {
      if (receiver == null)
        return receiver;
      if (receiver.constructor == Array)
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        return receiver;
      }
      if (receiver instanceof P.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    get$iterator$ax: function(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx: function(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    elementAt$1$ax: function(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    toString$0$: function(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _.__interceptors$_iterable = t0;
      _.__interceptors$_length = t1;
      _.__interceptors$_index = 0;
      _.__interceptors$_current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSDouble: function JSDouble() {
    },
    JSString: function JSString() {
    }
  },
  P = {
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = H.setRuntimeTypeInfo([], type$.JSArray_String);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      C.JSArray_methods.add$1($._toStringVisiting, iterable);
      try {
        t1 = buffer;
        t1._contents = P.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var t1, i;
      for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
        if (o === $._toStringVisiting[i])
          return true;
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current());
        C.JSArray_methods.add$1(parts, next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            C.JSArray_methods.add$1(parts, H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, -1);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, -1);
                $length -= parts.pop().length + 2;
                --count;
              }
              C.JSArray_methods.add$1(parts, "...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, -1);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        C.JSArray_methods.add$1(parts, elision);
      C.JSArray_methods.add$1(parts, penultimateString);
      C.JSArray_methods.add$1(parts, ultimateString);
    },
    MapBase_mapToString: function(m) {
      var result, t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        C.JSArray_methods.add$1($._toStringVisiting, m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new P.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        if (0 >= $._toStringVisiting.length)
          return H.ioore($._toStringVisiting, -1);
        $._toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListBase: function ListBase() {
    },
    ListMixin: function ListMixin() {
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
    },
    Error__objectToString: function(object) {
      if (object instanceof H.Closure)
        return object.toString$0(0);
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    List_List$filled: function($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from: function(elements, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        C.JSArray_methods.add$1(list, $E._as(t1.get$current()));
      return list;
    },
    List_List$of: function(elements, growable, $E) {
      var t1 = P.List_List$_of(elements, $E);
      return t1;
    },
    List_List$_of: function(elements, $E) {
      var t1,
        list = H.setRuntimeTypeInfo([], $E._eval$1("JSArray<0>"));
      for (t1 = elements.get$iterator(elements); t1.moveNext$0();)
        C.JSArray_methods.add$1(list, t1.get$current());
      return list;
    },
    List_List$generate: function($length, generator, $E) {
      var i,
        result = J.JSArray_JSArray$growable($length, $E);
      for (i = 0; i < $length; ++i)
        C.JSArray_methods.$indexSet(result, i, generator.call$1(i));
      return result;
    },
    StringBuffer__writeAll: function(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += H.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += H.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + H.S(iterator.get$current());
      }
      return string;
    },
    Error_safeToString: function(object) {
      if (typeof object == "number" || H._isBool(object) || null == object)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    AssertionError$: function(message) {
      return new P.AssertionError(message);
    },
    ArgumentError$: function(message) {
      return new P.ArgumentError(false, null, null, message);
    },
    RangeError$value: function(value, $name) {
      return new P.RangeError(null, null, true, value, $name, "Value not in range");
    },
    RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
      return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange: function(start, end, $length) {
      if (start > $length)
        throw H.wrapException(P.RangeError$range(start, 0, $length, "start", null));
      if (start > end || end > $length)
        throw H.wrapException(P.RangeError$range(end, start, $length, "end", null));
      return end;
    },
    RangeError_checkNotNegative: function(value, $name) {
      if (value < 0)
        throw H.wrapException(P.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$: function(invalidValue, indexable, $name, message, $length) {
      var t1 = $length == null ? J.get$length$asx(indexable) : $length;
      return new P.IndexError(t1, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$: function(message) {
      return new P.UnsupportedError(message);
    },
    UnimplementedError$: function(message) {
      return new P.UnimplementedError(message);
    },
    StateError$: function(message) {
      return new P.StateError(message);
    },
    ConcurrentModificationError$: function(modifiedObject) {
      return new P.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception: function(message) {
      return new P._Exception(message);
    },
    print: function(object) {
      H.printString(object);
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    NullThrownError: function NullThrownError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    StackOverflowError: function StackOverflowError() {
    },
    CyclicInitializationError: function CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    Iterable: function Iterable() {
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    _JSSecureRandom: function _JSSecureRandom(t0) {
      this._buffer = t0;
    },
    _UnmodifiableListMixin: function _UnmodifiableListMixin() {
    },
    UnmodifiableUint8ListView: function UnmodifiableUint8ListView(t0) {
      this._list = t0;
    },
    _UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin: function _UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin() {
    }
  },
  F = {
    ByteList$: function(bytes, bytesLength) {
      var t3,
        t1 = bytesLength == null,
        t2 = t1 ? J.get$length$asx(bytes) : bytesLength;
      t1 = t1 ? J.get$length$asx(bytes) : bytesLength;
      t3 = J.getInterceptor$asx(bytes);
      if (t3.get$length(bytes) < t2 || t3.get$length(bytes) > t1)
        H.throwExpression(P.Exception_Exception("The list length (" + t3.get$length(bytes) + ") is invalid (min: " + t2 + ", max: " + t1 + ")"));
      return new F.ByteList(new P.UnmodifiableUint8ListView(new Uint8Array(H._ensureNativeList(t3.toList$0(bytes)))));
    },
    AsymmetricKey: function AsymmetricKey() {
    },
    AsymmetricPublicKey: function AsymmetricPublicKey() {
    },
    AsymmetricPrivateKey: function AsymmetricPrivateKey() {
    },
    ByteList: function ByteList(t0) {
      this._u8l = t0;
    },
    Suffix: function Suffix() {
    },
    Encodable: function Encodable() {
    },
    _AsymmetricKey_ByteList_Encodable: function _AsymmetricKey_ByteList_Encodable() {
    },
    _AsymmetricKey_ByteList_Encodable_Suffix: function _AsymmetricKey_ByteList_Encodable_Suffix() {
    },
    _ByteList_Object_ListMixin: function _ByteList_Object_ListMixin() {
    },
    _ByteList_Object_ListMixin_Encodable: function _ByteList_Object_ListMixin_Encodable() {
    }
  },
  G = {
    HexCoder__decode: function(hexString) {
      var startsWithHexStart, startIndex, result, i, x, left, t2, right, t3,
        t1 = hexString.length;
      if (C.JSInt_methods.$mod(t1, 2) !== 0)
        throw H.wrapException(P.Exception_Exception("Invalid `length`. Expected even number got `" + t1 + "`"));
      startsWithHexStart = C.JSString_methods.startsWith$1(hexString, "0x");
      if (startsWithHexStart && t1 === 2)
        throw H.wrapException(P.Exception_Exception("There is no any character in the hexadecimal string"));
      startIndex = startsWithHexStart ? 2 : 0;
      result = P.List_List$filled(C.JSInt_methods._tdivFast$1(t1 - startIndex, 2), 0, false, type$.int);
      for (i = startIndex, x = 0; i < t1; i += 2, ++x) {
        left = C.Map_GD2No.$index(0, hexString[i]);
        if (left == null)
          left = -1;
        t2 = i + 1;
        if (t2 >= t1)
          return H.ioore(hexString, t2);
        right = C.Map_GD2No.$index(0, hexString[t2]);
        if (right == null)
          right = -1;
        t3 = left < 0;
        if (t3 || right < 0)
          throw H.wrapException(P.Exception_Exception("The `" + (t3 ? hexString[i] : hexString[t2]) + "` character is undefined in hex"));
        C.JSArray_methods.$indexSet(result, x, (left << 4 | right) >>> 0);
      }
      return result;
    },
    HexCoder__encode: function(hexArray) {
      var t1 = {};
      if (hexArray.get$length(hexArray) === 0)
        return "";
      t1.result = "";
      hexArray.forEach$1(hexArray, new G.HexCoder__encode_closure(t1));
      return t1.result;
    },
    HexCoder: function HexCoder() {
    },
    HexCoder__encode_closure: function HexCoder__encode_closure(t0) {
      this._box_0 = t0;
    }
  },
  K = {
    Signature$: function(bytes) {
      if (bytes.get$length(bytes) < 64 || bytes.get$length(bytes) > 64)
        H.throwExpression(P.Exception_Exception("The list length (" + bytes.get$length(bytes) + ") is invalid (min: 64, max: 64)"));
      return new K.Signature(new P.UnmodifiableUint8ListView(new Uint8Array(H._ensureNativeList(bytes.toList$0(bytes)))));
    },
    VerifyKey$: function(bytes, keyLength) {
      if (bytes.get$length(bytes) < keyLength || bytes.get$length(bytes) > keyLength)
        H.throwExpression(P.Exception_Exception("The list length (" + bytes.get$length(bytes) + ") is invalid (min: " + keyLength + ", max: " + keyLength + ")"));
      return new K.VerifyKey(null, new P.UnmodifiableUint8ListView(new Uint8Array(H._ensureNativeList(bytes.toList$0(bytes)))));
    },
    SigningKey$fromValidBytes: function(secret) {
      var t1 = J.getInterceptor$asx(secret);
      if (t1.get$length(secret) < 64 || t1.get$length(secret) > 64)
        H.throwExpression(P.Exception_Exception("The list length (" + t1.get$length(secret) + ") is invalid (min: 64, max: 64)"));
      return new K.SigningKey(null, new P.UnmodifiableUint8ListView(new Uint8Array(H._ensureNativeList(t1.toList$0(secret)))));
    },
    Signature: function Signature(t0) {
      this._u8l = t0;
    },
    VerifyKey: function VerifyKey(t0, t1) {
      this.Suffix___Suffix_prefixLength = t0;
      this._u8l = t1;
    },
    SigningKey: function SigningKey(t0, t1) {
      this._verifyKey = null;
      this.Suffix___Suffix_prefixLength = t0;
      this._u8l = t1;
    },
    SignedMessage: function SignedMessage(t0, t1) {
      this.Suffix___Suffix_prefixLength = t0;
      this._u8l = t1;
    },
    _SignedMessage_ByteList_Suffix: function _SignedMessage_ByteList_Suffix() {
    }
  },
  U = {
    TweetNaCl__ts64: function(x, i, uh, ul) {
      var t3,
        t1 = C.JSInt_methods._shrOtherPositive$1(uh, 24),
        t2 = x.length;
      if (i < 0 || i >= t2)
        return H.ioore(x, i);
      x[i] = t1 & 255;
      t1 = i + 1;
      t3 = C.JSInt_methods._shrOtherPositive$1(uh, 16);
      if (t1 >= t2)
        return H.ioore(x, t1);
      x[t1] = t3 & 255;
      t3 = i + 2;
      t1 = C.JSInt_methods._shrOtherPositive$1(uh, 8);
      if (t3 >= t2)
        return H.ioore(x, t3);
      x[t3] = t1 & 255;
      t1 = i + 3;
      if (t1 >= t2)
        return H.ioore(x, t1);
      x[t1] = uh & 255;
      t1 = i + 4;
      t3 = C.JSInt_methods._shrOtherPositive$1(ul, 24);
      if (t1 >= t2)
        return H.ioore(x, t1);
      x[t1] = t3 & 255;
      t3 = i + 5;
      t1 = C.JSInt_methods._shrOtherPositive$1(ul, 16);
      if (t3 >= t2)
        return H.ioore(x, t3);
      x[t3] = t1 & 255;
      t1 = i + 6;
      t3 = C.JSInt_methods._shrOtherPositive$1(ul, 8);
      if (t1 >= t2)
        return H.ioore(x, t1);
      x[t1] = t3 & 255;
      t3 = i + 7;
      if (t3 >= t2)
        return H.ioore(x, t3);
      x[t3] = ul & 255;
    },
    TweetNaCl__vn: function(x, xoff, y, yoff, n) {
      var t1, i, d, t2, t3;
      for (t1 = x.length, i = 0, d = 0; i < n; ++i) {
        t2 = i + xoff;
        if (t2 >= t1)
          return H.ioore(x, t2);
        t2 = x[t2];
        t3 = i + yoff;
        if (t3 >= 32)
          return H.ioore(y, t3);
        d |= (t2 ^ y[t3]) & 255;
      }
      return (C.JSInt_methods._shrOtherPositive$1(d - 1, 8) & 1) - 1;
    },
    TweetNaCl__set25519: function(r, a) {
      var i;
      for (i = 0; i < 16; ++i)
        C.JSArray_methods.$indexSet(r, i, a[i]);
    },
    TweetNaCl__car25519: function(o) {
      var i, c, v, t1;
      for (i = 0, c = 1; i < 16; ++i) {
        v = o[i] + c + 65535;
        c = C.JSInt_methods._tdivFast$1(v, 65536);
        C.JSArray_methods.$indexSet(o, i, v - c * 65536);
      }
      t1 = c - 1;
      C.JSArray_methods.$indexSet(o, 0, o[0] + (t1 + 37 * t1));
    },
    TweetNaCl__sel25519_off: function(p, poff, q, qoff, b) {
      var i, t1, t2, t3, t4, t,
        c = ~(b - 1);
      for (i = 0; i < 16; ++i) {
        t1 = i + poff;
        if (t1 >= 16)
          return H.ioore(p, t1);
        t2 = p[t1];
        t3 = i + qoff;
        if (t3 >= 16)
          return H.ioore(q, t3);
        t4 = q[t3];
        if (typeof t2 !== "number")
          return t2.$xor();
        if (typeof t4 !== "number")
          return H.iae(t4);
        t = c & (t2 ^ t4);
        C.JSArray_methods.$indexSet(p, t1, (t2 ^ t) >>> 0);
        t2 = q[t3];
        if (typeof t2 !== "number")
          return t2.$xor();
        C.JSArray_methods.$indexSet(q, t3, (t2 ^ t) >>> 0);
      }
    },
    TweetNaCl__pack25519: function(o, n, noff) {
      var i, j, t2, t3,
        t1 = type$.int,
        m = P.List_List$filled(16, 0, false, t1),
        t = P.List_List$filled(16, 0, false, t1);
      for (i = 0; i < 16; ++i) {
        t1 = i + noff;
        if (t1 >= 16)
          return H.ioore(n, t1);
        C.JSArray_methods.$indexSet(t, i, n[t1]);
      }
      U.TweetNaCl__car25519(t);
      U.TweetNaCl__car25519(t);
      U.TweetNaCl__car25519(t);
      for (j = 0; j < 2; ++j) {
        C.JSArray_methods.$indexSet(m, 0, t[0] - 65517);
        for (i = 1; i < 15; ++i) {
          t1 = i - 1;
          C.JSArray_methods.$indexSet(m, i, t[i] - 65535 - (C.JSInt_methods._shrOtherPositive$1(m[t1], 16) & 1));
          C.JSArray_methods.$indexSet(m, t1, m[t1] & 65535);
        }
        C.JSArray_methods.$indexSet(m, 15, t[15] - 32767 - (C.JSInt_methods._shrOtherPositive$1(m[14], 16) & 1));
        t1 = C.JSInt_methods._shrOtherPositive$1(m[15], 16);
        C.JSArray_methods.$indexSet(m, 14, m[14] & 65535);
        U.TweetNaCl__sel25519_off(t, 0, m, 0, 1 - (t1 & 1));
      }
      for (t1 = o.length, i = 0; i < 16; ++i) {
        t2 = 2 * i;
        t3 = t[i];
        if (t2 >= t1)
          return H.ioore(o, t2);
        o[t2] = t3 & 255;
        ++t2;
        t3 = C.JSInt_methods._shrOtherPositive$1(t3, 8);
        if (t2 >= t1)
          return H.ioore(o, t2);
        o[t2] = t3;
      }
    },
    TweetNaCl__neq25519_off: function(a, aoff, b, boff) {
      var c = new Uint8Array(32),
        d = new Uint8Array(32);
      U.TweetNaCl__pack25519(c, a, aoff);
      U.TweetNaCl__pack25519(d, b, boff);
      return U.TweetNaCl__vn(c, 0, d, 0, 32);
    },
    TweetNaCl__par25519_off: function(a, aoff) {
      var d = new Uint8Array(32);
      U.TweetNaCl__pack25519(d, a, aoff);
      return d[0] & 1;
    },
    TweetNaCl__unpack25519: function(o, n) {
      var t1, t2, i, t3, t4;
      for (t1 = n._u8l._list, t2 = t1.length, i = 0; i < 16; ++i) {
        t3 = 2 * i;
        if (t3 >= t2)
          return H.ioore(t1, t3);
        t4 = t1[t3];
        ++t3;
        if (t3 >= t2)
          return H.ioore(t1, t3);
        C.JSArray_methods.$indexSet(o, i, (t4 & 255) + (t1[t3] << 8 & 65535));
      }
      t1 = o[15];
      if (typeof t1 !== "number")
        return t1.$and();
      C.JSArray_methods.$indexSet(o, 15, t1 & 32767);
    },
    TweetNaCl__A_off: function(o, ooff, a, aoff, b, boff) {
      var i, t1, t2;
      for (i = 0; i < 16; ++i) {
        t1 = i + aoff;
        if (t1 >= 16)
          return H.ioore(a, t1);
        t1 = a[t1];
        t2 = i + boff;
        if (t2 >= 16)
          return H.ioore(b, t2);
        t2 = b[t2];
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return H.iae(t2);
        C.JSArray_methods.$indexSet(o, i + ooff, t1 + t2);
      }
    },
    TweetNaCl__Z_off: function(o, ooff, a, aoff, b, boff) {
      var i, t1, t2;
      for (i = 0; i < 16; ++i) {
        t1 = i + aoff;
        if (t1 >= a.length)
          return H.ioore(a, t1);
        t1 = a[t1];
        t2 = i + boff;
        if (t2 >= 16)
          return H.ioore(b, t2);
        t2 = b[t2];
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        C.JSArray_methods.$indexSet(o, i + ooff, t1 - t2);
      }
    },
    TweetNaCl__M_off: function(o, ooff, a, aoff, b, boff) {
      var b0, t2, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, v, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, c, v16, c0, v17, c1, v18, c2, v19, c3, v20, c4, v21, c5, v22, c6, v23, c7, v24, c8, v25, c9, v26, c10, v27, c11, v28, c12, v29, c13, c14, _65536 = 65536,
        t1 = b.length;
      if (boff >= t1)
        return H.ioore(b, boff);
      b0 = b[boff];
      t2 = 1 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b1 = b[t2];
      t2 = 2 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b2 = b[t2];
      t2 = 3 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b3 = b[t2];
      t2 = 4 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b4 = b[t2];
      t2 = 5 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b5 = b[t2];
      t2 = 6 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b6 = b[t2];
      t2 = 7 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b7 = b[t2];
      t2 = 8 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b8 = b[t2];
      t2 = 9 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b9 = b[t2];
      t2 = 10 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b10 = b[t2];
      t2 = 11 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b11 = b[t2];
      t2 = 12 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b12 = b[t2];
      t2 = 13 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b13 = b[t2];
      t2 = 14 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b14 = b[t2];
      t2 = 15 + boff;
      if (t2 >= t1)
        return H.ioore(b, t2);
      b15 = b[t2];
      if (aoff >= 16)
        return H.ioore(a, aoff);
      v = a[aoff];
      t2 = 1 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v0 = a[t2];
      t2 = 2 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v1 = a[t2];
      t2 = 3 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v2 = a[t2];
      t2 = 4 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v3 = a[t2];
      t2 = 5 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v4 = a[t2];
      t2 = 6 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v5 = a[t2];
      t2 = 7 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v6 = a[t2];
      t2 = 8 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v7 = a[t2];
      t2 = 9 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v8 = a[t2];
      t2 = 10 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v9 = a[t2];
      t2 = 11 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v10 = a[t2];
      t2 = 12 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v11 = a[t2];
      t2 = 13 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v12 = a[t2];
      t2 = 14 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v13 = a[t2];
      t2 = 15 + aoff;
      if (t2 >= 16)
        return H.ioore(a, t2);
      v14 = a[t2];
      v15 = v * b0 + 38 * (v0 * b15 + v1 * b14 + v2 * b13 + v3 * b12 + v4 * b11 + v5 * b10 + v6 * b9 + v7 * b8 + v8 * b7 + v9 * b6 + v10 * b5 + v11 * b4 + v12 * b3 + v13 * b2 + v14 * b1) + 1 + 65535;
      c = C.JSInt_methods._tdivFast$1(v15, _65536);
      v16 = v * b1 + v0 * b0 + 38 * (v1 * b15 + v2 * b14 + v3 * b13 + v4 * b12 + v5 * b11 + v6 * b10 + v7 * b9 + v8 * b8 + v9 * b7 + v10 * b6 + v11 * b5 + v12 * b4 + v13 * b3 + v14 * b2) + c + 65535;
      c0 = C.JSInt_methods._tdivFast$1(v16, _65536);
      v17 = v * b2 + v0 * b1 + v1 * b0 + 38 * (v2 * b15 + v3 * b14 + v4 * b13 + v5 * b12 + v6 * b11 + v7 * b10 + v8 * b9 + v9 * b8 + v10 * b7 + v11 * b6 + v12 * b5 + v13 * b4 + v14 * b3) + c0 + 65535;
      c1 = C.JSInt_methods._tdivFast$1(v17, _65536);
      v18 = v * b3 + v0 * b2 + v1 * b1 + v2 * b0 + 38 * (v3 * b15 + v4 * b14 + v5 * b13 + v6 * b12 + v7 * b11 + v8 * b10 + v9 * b9 + v10 * b8 + v11 * b7 + v12 * b6 + v13 * b5 + v14 * b4) + c1 + 65535;
      c2 = C.JSInt_methods._tdivFast$1(v18, _65536);
      v19 = v * b4 + v0 * b3 + v1 * b2 + v2 * b1 + v3 * b0 + 38 * (v4 * b15 + v5 * b14 + v6 * b13 + v7 * b12 + v8 * b11 + v9 * b10 + v10 * b9 + v11 * b8 + v12 * b7 + v13 * b6 + v14 * b5) + c2 + 65535;
      c3 = C.JSInt_methods._tdivFast$1(v19, _65536);
      v20 = v * b5 + v0 * b4 + v1 * b3 + v2 * b2 + v3 * b1 + v4 * b0 + 38 * (v5 * b15 + v6 * b14 + v7 * b13 + v8 * b12 + v9 * b11 + v10 * b10 + v11 * b9 + v12 * b8 + v13 * b7 + v14 * b6) + c3 + 65535;
      c4 = C.JSInt_methods._tdivFast$1(v20, _65536);
      v21 = v * b6 + v0 * b5 + v1 * b4 + v2 * b3 + v3 * b2 + v4 * b1 + v5 * b0 + 38 * (v6 * b15 + v7 * b14 + v8 * b13 + v9 * b12 + v10 * b11 + v11 * b10 + v12 * b9 + v13 * b8 + v14 * b7) + c4 + 65535;
      c5 = C.JSInt_methods._tdivFast$1(v21, _65536);
      v22 = v * b7 + v0 * b6 + v1 * b5 + v2 * b4 + v3 * b3 + v4 * b2 + v5 * b1 + v6 * b0 + 38 * (v7 * b15 + v8 * b14 + v9 * b13 + v10 * b12 + v11 * b11 + v12 * b10 + v13 * b9 + v14 * b8) + c5 + 65535;
      c6 = C.JSInt_methods._tdivFast$1(v22, _65536);
      v23 = v * b8 + v0 * b7 + v1 * b6 + v2 * b5 + v3 * b4 + v4 * b3 + v5 * b2 + v6 * b1 + v7 * b0 + 38 * (v8 * b15 + v9 * b14 + v10 * b13 + v11 * b12 + v12 * b11 + v13 * b10 + v14 * b9) + c6 + 65535;
      c7 = C.JSInt_methods._tdivFast$1(v23, _65536);
      v24 = v * b9 + v0 * b8 + v1 * b7 + v2 * b6 + v3 * b5 + v4 * b4 + v5 * b3 + v6 * b2 + v7 * b1 + v8 * b0 + 38 * (v9 * b15 + v10 * b14 + v11 * b13 + v12 * b12 + v13 * b11 + v14 * b10) + c7 + 65535;
      c8 = C.JSInt_methods._tdivFast$1(v24, _65536);
      v25 = v * b10 + v0 * b9 + v1 * b8 + v2 * b7 + v3 * b6 + v4 * b5 + v5 * b4 + v6 * b3 + v7 * b2 + v8 * b1 + v9 * b0 + 38 * (v10 * b15 + v11 * b14 + v12 * b13 + v13 * b12 + v14 * b11) + c8 + 65535;
      c9 = C.JSInt_methods._tdivFast$1(v25, _65536);
      v26 = v * b11 + v0 * b10 + v1 * b9 + v2 * b8 + v3 * b7 + v4 * b6 + v5 * b5 + v6 * b4 + v7 * b3 + v8 * b2 + v9 * b1 + v10 * b0 + 38 * (v11 * b15 + v12 * b14 + v13 * b13 + v14 * b12) + c9 + 65535;
      c10 = C.JSInt_methods._tdivFast$1(v26, _65536);
      v27 = v * b12 + v0 * b11 + v1 * b10 + v2 * b9 + v3 * b8 + v4 * b7 + v5 * b6 + v6 * b5 + v7 * b4 + v8 * b3 + v9 * b2 + v10 * b1 + v11 * b0 + 38 * (v12 * b15 + v13 * b14 + v14 * b13) + c10 + 65535;
      c11 = C.JSInt_methods._tdivFast$1(v27, _65536);
      v28 = v * b13 + v0 * b12 + v1 * b11 + v2 * b10 + v3 * b9 + v4 * b8 + v5 * b7 + v6 * b6 + v7 * b5 + v8 * b4 + v9 * b3 + v10 * b2 + v11 * b1 + v12 * b0 + 38 * (v13 * b15 + v14 * b14) + c11 + 65535;
      c12 = C.JSInt_methods._tdivFast$1(v28, _65536);
      v29 = v * b14 + v0 * b13 + v1 * b12 + v2 * b11 + v3 * b10 + v4 * b9 + v5 * b8 + v6 * b7 + v7 * b6 + v8 * b5 + v9 * b4 + v10 * b3 + v11 * b2 + v12 * b1 + v13 * b0 + 38 * (v14 * b15) + c12 + 65535;
      c13 = C.JSInt_methods._tdivFast$1(v29, _65536);
      v = v * b15 + v0 * b14 + v1 * b13 + v2 * b12 + v3 * b11 + v4 * b10 + v5 * b9 + v6 * b8 + v7 * b7 + v8 * b6 + v9 * b5 + v10 * b4 + v11 * b3 + v12 * b2 + v13 * b1 + v14 * b0 + c13 + 65535;
      c14 = C.JSInt_methods._tdivFast$1(v, _65536);
      t2 = c14 - 1;
      v0 = v15 - c * 65536 + (t2 + 37 * t2) + 1 + 65535;
      c = C.JSInt_methods._tdivFast$1(v0, _65536);
      v1 = v16 - c0 * 65536 + c + 65535;
      c0 = C.JSInt_methods._tdivFast$1(v1, _65536);
      v2 = v17 - c1 * 65536 + c0 + 65535;
      c1 = C.JSInt_methods._tdivFast$1(v2, _65536);
      v3 = v18 - c2 * 65536 + c1 + 65535;
      c2 = C.JSInt_methods._tdivFast$1(v3, _65536);
      v4 = v19 - c3 * 65536 + c2 + 65535;
      c3 = C.JSInt_methods._tdivFast$1(v4, _65536);
      v5 = v20 - c4 * 65536 + c3 + 65535;
      c4 = C.JSInt_methods._tdivFast$1(v5, _65536);
      v6 = v21 - c5 * 65536 + c4 + 65535;
      c5 = C.JSInt_methods._tdivFast$1(v6, _65536);
      v7 = v22 - c6 * 65536 + c5 + 65535;
      c6 = C.JSInt_methods._tdivFast$1(v7, _65536);
      v8 = v23 - c7 * 65536 + c6 + 65535;
      c7 = C.JSInt_methods._tdivFast$1(v8, _65536);
      v9 = v24 - c8 * 65536 + c7 + 65535;
      c8 = C.JSInt_methods._tdivFast$1(v9, _65536);
      v10 = v25 - c9 * 65536 + c8 + 65535;
      c9 = C.JSInt_methods._tdivFast$1(v10, _65536);
      v11 = v26 - c10 * 65536 + c9 + 65535;
      c10 = C.JSInt_methods._tdivFast$1(v11, _65536);
      v12 = v27 - c11 * 65536 + c10 + 65535;
      c11 = C.JSInt_methods._tdivFast$1(v12, _65536);
      v13 = v28 - c12 * 65536 + c11 + 65535;
      c12 = C.JSInt_methods._tdivFast$1(v13, _65536);
      v14 = v29 - c13 * 65536 + c12 + 65535;
      c13 = C.JSInt_methods._tdivFast$1(v14, _65536);
      v = v - c14 * 65536 + c13 + 65535;
      c14 = C.JSInt_methods._tdivFast$1(v, _65536);
      t2 = c14 - 1;
      C.JSArray_methods.$indexSet(o, ooff, v0 - c * 65536 + (t2 + 37 * t2));
      C.JSArray_methods.$indexSet(o, 1 + ooff, v1 - c0 * 65536);
      C.JSArray_methods.$indexSet(o, 2 + ooff, v2 - c1 * 65536);
      C.JSArray_methods.$indexSet(o, 3 + ooff, v3 - c2 * 65536);
      C.JSArray_methods.$indexSet(o, 4 + ooff, v4 - c3 * 65536);
      C.JSArray_methods.$indexSet(o, 5 + ooff, v5 - c4 * 65536);
      C.JSArray_methods.$indexSet(o, 6 + ooff, v6 - c5 * 65536);
      C.JSArray_methods.$indexSet(o, 7 + ooff, v7 - c6 * 65536);
      C.JSArray_methods.$indexSet(o, 8 + ooff, v8 - c7 * 65536);
      C.JSArray_methods.$indexSet(o, 9 + ooff, v9 - c8 * 65536);
      C.JSArray_methods.$indexSet(o, 10 + ooff, v10 - c9 * 65536);
      C.JSArray_methods.$indexSet(o, 11 + ooff, v11 - c10 * 65536);
      C.JSArray_methods.$indexSet(o, 12 + ooff, v12 - c11 * 65536);
      C.JSArray_methods.$indexSet(o, 13 + ooff, v13 - c12 * 65536);
      C.JSArray_methods.$indexSet(o, 14 + ooff, v14 - c13 * 65536);
      C.JSArray_methods.$indexSet(o, 15 + ooff, v - c14 * 65536);
    },
    TweetNaCl__inv25519: function(o, ooff, i, ioff) {
      var a, t1,
        c = P.List_List$filled(16, 0, false, type$.int);
      for (a = 0; a < 16; ++a) {
        t1 = a + ioff;
        if (t1 >= 16)
          return H.ioore(i, t1);
        C.JSArray_methods.$indexSet(c, a, i[t1]);
      }
      for (a = 253; a >= 0; --a) {
        U.TweetNaCl__M_off(c, 0, c, 0, c, 0);
        if (a !== 2 && a !== 4)
          U.TweetNaCl__M_off(c, 0, c, 0, i, ioff);
      }
      for (a = 0; a < 16; ++a)
        C.JSArray_methods.$indexSet(o, a + ooff, c[a]);
    },
    TweetNaCl__pow2523: function(o, i) {
      var a,
        c = P.List_List$filled(16, 0, false, type$.int);
      for (a = 0; a < 16; ++a)
        C.JSArray_methods.$indexSet(c, a, i[a]);
      for (a = 250; a >= 0; --a) {
        U.TweetNaCl__M_off(c, 0, c, 0, c, 0);
        if (a !== 1)
          U.TweetNaCl__M_off(c, 0, c, 0, i, 0);
      }
      for (a = 0; a < 16; ++a)
        C.JSArray_methods.$indexSet(o, a, c[a]);
    },
    TweetNaCl__shr32: function(x, n) {
      var t1 = x >= 0 ? C.JSInt_methods._shrOtherPositive$1(x, n) : C.JSInt_methods._shrOtherPositive$1(x, n) & C.JSInt_methods.$shl(1, 32 - n) - 1;
      return (t1 & 2147483647) - ((t1 & 2147483648) >>> 0);
    },
    TweetNaCl_crypto_hashblocks_hl: function(hh, hl, m, moff, n) {
      var t1, t2, t3, t4, t5, j, th, tl, pos, i, h, l, t6, t7, t8, t9, t10, t11, t12, t13, t14, h0, l0, h1, l1, h2, l2, h3, l3, a, t15, t16, x, b, c, t17, a0, c0, j0,
        wh = new Int32Array(16),
        wl = new Int32Array(16),
        bh = new Int32Array(8),
        bl = new Int32Array(8),
        ah = new Int32Array(H._ensureNativeList(hh)),
        al = new Int32Array(H._ensureNativeList(hl));
      for (t1 = ah.length, t2 = hh.length, t3 = al.length, t4 = hl.length, t5 = J.getInterceptor$asx(m), j = null, th = null, tl = null, pos = 0; n >= 128;) {
        for (i = 0; i < 16; ++i) {
          j = 8 * i + pos;
          wh[i] = ((t5.$index(m, j + moff) & 255) << 24 | (t5.$index(m, j + 1 + moff) & 255) << 16 | (t5.$index(m, j + 2 + moff) & 255) << 8 | t5.$index(m, j + 3 + moff) & 255) >>> 0;
          wl[i] = ((t5.$index(m, j + 4 + moff) & 255) << 24 | (t5.$index(m, j + 5 + moff) & 255) << 16 | (t5.$index(m, j + 6 + moff) & 255) << 8 | t5.$index(m, j + 7 + moff) & 255) >>> 0;
        }
        for (i = 0; i < 80; ++i) {
          if (0 >= t1)
            return H.ioore(ah, 0);
          bh[0] = ah[0];
          if (1 >= t1)
            return H.ioore(ah, 1);
          bh[1] = ah[1];
          if (2 >= t1)
            return H.ioore(ah, 2);
          bh[2] = ah[2];
          if (3 >= t1)
            return H.ioore(ah, 3);
          bh[3] = ah[3];
          if (4 >= t1)
            return H.ioore(ah, 4);
          bh[4] = ah[4];
          if (5 >= t1)
            return H.ioore(ah, 5);
          bh[5] = ah[5];
          if (6 >= t1)
            return H.ioore(ah, 6);
          bh[6] = ah[6];
          if (7 >= t1)
            return H.ioore(ah, 7);
          bh[7] = ah[7];
          if (0 >= t3)
            return H.ioore(al, 0);
          bl[0] = al[0];
          if (1 >= t3)
            return H.ioore(al, 1);
          bl[1] = al[1];
          if (2 >= t3)
            return H.ioore(al, 2);
          bl[2] = al[2];
          if (3 >= t3)
            return H.ioore(al, 3);
          bl[3] = al[3];
          if (4 >= t3)
            return H.ioore(al, 4);
          bl[4] = al[4];
          if (5 >= t3)
            return H.ioore(al, 5);
          bl[5] = al[5];
          if (6 >= t3)
            return H.ioore(al, 6);
          bl[6] = al[6];
          if (7 >= t3)
            return H.ioore(al, 7);
          bl[7] = al[7];
          h = ah[7];
          l = al[7];
          t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
          t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
          t8 = ah[4];
          t9 = t8 >= 0;
          t10 = t9 ? C.JSInt_methods._shrOtherPositive$1(t8, 14) : C.JSInt_methods._shrOtherPositive$1(t8, 14) & 262143;
          t11 = al[4];
          t12 = t9 ? C.JSInt_methods._shrOtherPositive$1(t8, 18) : C.JSInt_methods._shrOtherPositive$1(t8, 18) & 16383;
          t13 = t11 >= 0;
          t14 = t13 ? C.JSInt_methods._shrOtherPositive$1(t11, 9) : C.JSInt_methods._shrOtherPositive$1(t11, 9) & 8388607;
          t14 = ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0) | t11 << 18) ^ ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | t11 << 14) ^ ((t14 & 2147483647) - ((t14 & 2147483648) >>> 0) | t8 << 23);
          h0 = (t14 & 2147483647) - ((t14 & 2147483648) >>> 0);
          t10 = t13 ? C.JSInt_methods._shrOtherPositive$1(t11, 14) : C.JSInt_methods._shrOtherPositive$1(t11, 14) & 262143;
          t12 = t13 ? C.JSInt_methods._shrOtherPositive$1(t11, 18) : C.JSInt_methods._shrOtherPositive$1(t11, 18) & 16383;
          t9 = t9 ? C.JSInt_methods._shrOtherPositive$1(t8, 9) : C.JSInt_methods._shrOtherPositive$1(t8, 9) & 8388607;
          t9 = ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0) | t8 << 18) ^ ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | t8 << 14) ^ ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0) | t11 << 23);
          l0 = (t9 & 2147483647) - ((t9 & 2147483648) >>> 0);
          t9 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
          t10 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
          t8 = t8 & ah[5] ^ ~t8 & ah[6];
          h1 = (t8 & 2147483647) - ((t8 & 2147483648) >>> 0);
          t11 = t11 & al[5] ^ ~t11 & al[6];
          l1 = (t11 & 2147483647) - ((t11 & 2147483648) >>> 0);
          t8 = l1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l1, 16) : C.JSInt_methods._shrOtherPositive$1(l1, 16) & 65535;
          t11 = h1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h1, 16) : C.JSInt_methods._shrOtherPositive$1(h1, 16) & 65535;
          t12 = i * 2;
          if (t12 >= 160)
            return H.ioore(C.List_i7B, t12);
          t13 = C.List_i7B[t12];
          h2 = (t13 & 2147483647) - ((t13 & 2147483648) >>> 0);
          ++t12;
          if (t12 >= 160)
            return H.ioore(C.List_i7B, t12);
          t12 = C.List_i7B[t12];
          l2 = (t12 & 2147483647) - ((t12 & 2147483648) >>> 0);
          t12 = l2 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l2, 16) : C.JSInt_methods._shrOtherPositive$1(l2, 16) & 65535;
          t13 = h2 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h2, 16) : C.JSInt_methods._shrOtherPositive$1(h2, 16) & 65535;
          t14 = C.JSInt_methods.$mod(i, 16);
          h3 = wh[t14];
          l3 = wl[t14];
          a = (l & 65535) + (l0 & 65535) + (l1 & 65535) + (l2 & 65535) + (l3 & 65535);
          t15 = l3 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l3, 16) : C.JSInt_methods._shrOtherPositive$1(l3, 16) & 65535;
          t16 = h3 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h3, 16) : C.JSInt_methods._shrOtherPositive$1(h3, 16) & 65535;
          x = a >>> 16;
          b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0)) + ((t15 & 2147483647) - ((t15 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
          t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
          c = (h & 65535) + (h0 & 65535) + (h1 & 65535) + (h2 & 65535) + (h3 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
          t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
          th = c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0)) + ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0)) + ((t13 & 2147483647) - ((t13 & 2147483648) >>> 0)) + ((t16 & 2147483647) - ((t16 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16;
          tl = a & 65535 | b << 16;
          h = (th & 2147483647) - ((th & 2147483648) >>> 0);
          l = (tl & 2147483647) - ((tl & 2147483648) >>> 0);
          a = l & 65535;
          t6 = l >= 0;
          t7 = t6 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
          c = h & 65535;
          t8 = h >= 0;
          t9 = t8 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
          t10 = ah[0];
          t11 = t10 >= 0;
          t12 = t11 ? C.JSInt_methods._shrOtherPositive$1(t10, 28) : C.JSInt_methods._shrOtherPositive$1(t10, 28) & 15;
          t13 = al[0];
          t15 = t13 >= 0;
          t16 = t15 ? C.JSInt_methods._shrOtherPositive$1(t13, 2) : C.JSInt_methods._shrOtherPositive$1(t13, 2) & 1073741823;
          t17 = t15 ? C.JSInt_methods._shrOtherPositive$1(t13, 7) : C.JSInt_methods._shrOtherPositive$1(t13, 7) & 33554431;
          t17 = ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | t13 << 4) ^ ((t16 & 2147483647) - ((t16 & 2147483648) >>> 0) | t10 << 30) ^ ((t17 & 2147483647) - ((t17 & 2147483648) >>> 0) | t10 << 25);
          h0 = (t17 & 2147483647) - ((t17 & 2147483648) >>> 0);
          t12 = t15 ? C.JSInt_methods._shrOtherPositive$1(t13, 28) : C.JSInt_methods._shrOtherPositive$1(t13, 28) & 15;
          t15 = t11 ? C.JSInt_methods._shrOtherPositive$1(t10, 2) : C.JSInt_methods._shrOtherPositive$1(t10, 2) & 1073741823;
          t11 = t11 ? C.JSInt_methods._shrOtherPositive$1(t10, 7) : C.JSInt_methods._shrOtherPositive$1(t10, 7) & 33554431;
          t11 = ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | t10 << 4) ^ ((t15 & 2147483647) - ((t15 & 2147483648) >>> 0) | t13 << 30) ^ ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0) | t13 << 25);
          l0 = (t11 & 2147483647) - ((t11 & 2147483648) >>> 0);
          t11 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
          t12 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
          t15 = ah[1];
          t16 = ah[2];
          t16 = t10 & t15 ^ t10 & t16 ^ t15 & t16;
          h1 = (t16 & 2147483647) - ((t16 & 2147483648) >>> 0);
          t16 = al[1];
          t15 = al[2];
          t15 = t13 & t16 ^ t13 & t15 ^ t16 & t15;
          l1 = (t15 & 2147483647) - ((t15 & 2147483648) >>> 0);
          a0 = a + (l0 & 65535) + (l1 & 65535);
          t10 = l1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l1, 16) : C.JSInt_methods._shrOtherPositive$1(l1, 16) & 65535;
          t13 = h1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h1, 16) : C.JSInt_methods._shrOtherPositive$1(h1, 16) & 65535;
          x = a0 >>> 16;
          b = (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0)) + ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
          t7 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
          c0 = c + (h0 & 65535) + (h1 & 65535) + ((t7 & 2147483647) - ((t7 & 2147483648) >>> 0));
          t7 = c0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(c0, 16) : C.JSInt_methods._shrOtherPositive$1(c0, 16) & 65535;
          t7 = c0 & 65535 | (t9 & 2147483647) - ((t9 & 2147483648) >>> 0) + ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0)) + ((t13 & 2147483647) - ((t13 & 2147483648) >>> 0)) + ((t7 & 2147483647) - ((t7 & 2147483648) >>> 0)) << 16;
          bh[7] = (t7 & 2147483647) - ((t7 & 2147483648) >>> 0);
          t7 = a0 & 65535 | b << 16;
          bl[7] = (t7 & 2147483647) - ((t7 & 2147483648) >>> 0);
          h0 = bh[3];
          l0 = bl[3];
          t7 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
          t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
          a = (l0 & 65535) + a;
          t6 = t6 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
          t8 = t8 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
          x = a >>> 16;
          b = (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
          t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
          c = (h0 & 65535) + c + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
          t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
          t6 = c & 65535 | (t9 & 2147483647) - ((t9 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16;
          bh[3] = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0);
          t6 = a & 65535 | b << 16;
          bl[3] = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0);
          ah[1] = bh[0];
          ah[2] = bh[1];
          ah[3] = bh[2];
          ah[4] = bh[3];
          ah[5] = bh[4];
          ah[6] = bh[5];
          ah[7] = bh[6];
          ah[0] = bh[7];
          al[1] = bl[0];
          al[2] = bl[1];
          al[3] = bl[2];
          al[4] = bl[3];
          al[5] = bl[4];
          al[6] = bl[5];
          al[7] = bl[6];
          al[0] = bl[7];
          if (t14 === 15)
            for (j = 0; j < 16; j = j0) {
              h = wh[j];
              l = wl[j];
              t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
              t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
              t8 = (j + 9) % 16;
              h0 = wh[t8];
              l0 = wl[t8];
              t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
              t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
              j0 = j + 1;
              t10 = j0 % 16;
              th = wh[t10];
              tl = wl[t10];
              t10 = th >= 0;
              t11 = t10 ? C.JSInt_methods._shrOtherPositive$1(th, 1) : C.JSInt_methods._shrOtherPositive$1(th, 1) & 2147483647;
              t12 = t10 ? C.JSInt_methods._shrOtherPositive$1(th, 8) : C.JSInt_methods._shrOtherPositive$1(th, 8) & 16777215;
              t10 = t10 ? C.JSInt_methods._shrOtherPositive$1(th, 7) : C.JSInt_methods._shrOtherPositive$1(th, 7) & 33554431;
              t10 = ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0) | tl << 31) ^ ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | tl << 24) ^ (t10 & 2147483647) - ((t10 & 2147483648) >>> 0);
              h1 = (t10 & 2147483647) - ((t10 & 2147483648) >>> 0);
              t10 = tl >= 0;
              t11 = t10 ? C.JSInt_methods._shrOtherPositive$1(tl, 1) : C.JSInt_methods._shrOtherPositive$1(tl, 1) & 2147483647;
              t12 = t10 ? C.JSInt_methods._shrOtherPositive$1(tl, 8) : C.JSInt_methods._shrOtherPositive$1(tl, 8) & 16777215;
              t10 = t10 ? C.JSInt_methods._shrOtherPositive$1(tl, 7) : C.JSInt_methods._shrOtherPositive$1(tl, 7) & 33554431;
              t10 = ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0) | th << 31) ^ ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | th << 24) ^ ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0) | th << 25);
              l1 = (t10 & 2147483647) - ((t10 & 2147483648) >>> 0);
              t10 = l1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l1, 16) : C.JSInt_methods._shrOtherPositive$1(l1, 16) & 65535;
              t11 = h1 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h1, 16) : C.JSInt_methods._shrOtherPositive$1(h1, 16) & 65535;
              t12 = (j + 14) % 16;
              th = wh[t12];
              tl = wl[t12];
              t12 = th >= 0;
              t13 = t12 ? C.JSInt_methods._shrOtherPositive$1(th, 19) : C.JSInt_methods._shrOtherPositive$1(th, 19) & 8191;
              t14 = tl >= 0;
              t15 = t14 ? C.JSInt_methods._shrOtherPositive$1(tl, 29) : C.JSInt_methods._shrOtherPositive$1(tl, 29) & 7;
              t16 = t12 ? C.JSInt_methods._shrOtherPositive$1(th, 6) : C.JSInt_methods._shrOtherPositive$1(th, 6) & 67108863;
              t16 = ((t13 & 2147483647) - ((t13 & 2147483648) >>> 0) | tl << 13) ^ ((t15 & 2147483647) - ((t15 & 2147483648) >>> 0) | th << 3) ^ (t16 & 2147483647) - ((t16 & 2147483648) >>> 0);
              h2 = (t16 & 2147483647) - ((t16 & 2147483648) >>> 0);
              t13 = t14 ? C.JSInt_methods._shrOtherPositive$1(tl, 19) : C.JSInt_methods._shrOtherPositive$1(tl, 19) & 8191;
              t12 = t12 ? C.JSInt_methods._shrOtherPositive$1(th, 29) : C.JSInt_methods._shrOtherPositive$1(th, 29) & 7;
              t14 = t14 ? C.JSInt_methods._shrOtherPositive$1(tl, 6) : C.JSInt_methods._shrOtherPositive$1(tl, 6) & 67108863;
              t14 = ((t13 & 2147483647) - ((t13 & 2147483648) >>> 0) | th << 13) ^ ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0) | tl << 3) ^ ((t14 & 2147483647) - ((t14 & 2147483648) >>> 0) | th << 26);
              l2 = (t14 & 2147483647) - ((t14 & 2147483648) >>> 0);
              a = (l & 65535) + (l0 & 65535) + (l1 & 65535) + (l2 & 65535);
              t12 = l2 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l2, 16) : C.JSInt_methods._shrOtherPositive$1(l2, 16) & 65535;
              t13 = h2 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h2, 16) : C.JSInt_methods._shrOtherPositive$1(h2, 16) & 65535;
              x = a >>> 16;
              b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((t10 & 2147483647) - ((t10 & 2147483648) >>> 0)) + ((t12 & 2147483647) - ((t12 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
              t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
              c = (h & 65535) + (h0 & 65535) + (h1 & 65535) + (h2 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
              t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
              wh[j] = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t11 & 2147483647) - ((t11 & 2147483648) >>> 0)) + ((t13 & 2147483647) - ((t13 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
              wl[j] = (a & 65535 | b << 16) >>> 0;
            }
        }
        if (0 >= t1)
          return H.ioore(ah, 0);
        h = ah[0];
        if (0 >= t3)
          return H.ioore(al, 0);
        l = al[0];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (0 >= t2)
          return H.ioore(hh, 0);
        h0 = hh[0];
        if (0 >= t4)
          return H.ioore(hl, 0);
        l0 = hl[0];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[0] = t6;
        hh[0] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[0] = t6;
        hl[0] = t6;
        if (1 >= t1)
          return H.ioore(ah, 1);
        h = ah[1];
        if (1 >= t3)
          return H.ioore(al, 1);
        l = al[1];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (1 >= t2)
          return H.ioore(hh, 1);
        h0 = hh[1];
        if (1 >= t4)
          return H.ioore(hl, 1);
        l0 = hl[1];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[1] = t6;
        hh[1] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[1] = t6;
        hl[1] = t6;
        if (2 >= t1)
          return H.ioore(ah, 2);
        h = ah[2];
        if (2 >= t3)
          return H.ioore(al, 2);
        l = al[2];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (2 >= t2)
          return H.ioore(hh, 2);
        h0 = hh[2];
        if (2 >= t4)
          return H.ioore(hl, 2);
        l0 = hl[2];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[2] = t6;
        hh[2] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[2] = t6;
        hl[2] = t6;
        if (3 >= t1)
          return H.ioore(ah, 3);
        h = ah[3];
        if (3 >= t3)
          return H.ioore(al, 3);
        l = al[3];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (3 >= t2)
          return H.ioore(hh, 3);
        h0 = hh[3];
        if (3 >= t4)
          return H.ioore(hl, 3);
        l0 = hl[3];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[3] = t6;
        hh[3] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[3] = t6;
        hl[3] = t6;
        if (4 >= t1)
          return H.ioore(ah, 4);
        h = ah[4];
        if (4 >= t3)
          return H.ioore(al, 4);
        l = al[4];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (4 >= t2)
          return H.ioore(hh, 4);
        h0 = hh[4];
        if (4 >= t4)
          return H.ioore(hl, 4);
        l0 = hl[4];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[4] = t6;
        hh[4] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[4] = t6;
        hl[4] = t6;
        if (5 >= t1)
          return H.ioore(ah, 5);
        h = ah[5];
        if (5 >= t3)
          return H.ioore(al, 5);
        l = al[5];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (5 >= t2)
          return H.ioore(hh, 5);
        h0 = hh[5];
        if (5 >= t4)
          return H.ioore(hl, 5);
        l0 = hl[5];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[5] = t6;
        hh[5] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[5] = t6;
        hl[5] = t6;
        if (6 >= t1)
          return H.ioore(ah, 6);
        h = ah[6];
        if (6 >= t3)
          return H.ioore(al, 6);
        l = al[6];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (6 >= t2)
          return H.ioore(hh, 6);
        h0 = hh[6];
        if (6 >= t4)
          return H.ioore(hl, 6);
        l0 = hl[6];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[6] = t6;
        hh[6] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[6] = t6;
        hl[6] = t6;
        if (7 >= t1)
          return H.ioore(ah, 7);
        h = ah[7];
        if (7 >= t3)
          return H.ioore(al, 7);
        l = al[7];
        t6 = l >= 0 ? C.JSInt_methods._shrOtherPositive$1(l, 16) : C.JSInt_methods._shrOtherPositive$1(l, 16) & 65535;
        t7 = h >= 0 ? C.JSInt_methods._shrOtherPositive$1(h, 16) : C.JSInt_methods._shrOtherPositive$1(h, 16) & 65535;
        if (7 >= t2)
          return H.ioore(hh, 7);
        h0 = hh[7];
        if (7 >= t4)
          return H.ioore(hl, 7);
        l0 = hl[7];
        a = (l & 65535) + (l0 & 65535);
        t8 = l0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(l0, 16) : C.JSInt_methods._shrOtherPositive$1(l0, 16) & 65535;
        t9 = h0 >= 0 ? C.JSInt_methods._shrOtherPositive$1(h0, 16) : C.JSInt_methods._shrOtherPositive$1(h0, 16) & 65535;
        x = a >>> 16;
        b = (t6 & 2147483647) - ((t6 & 2147483648) >>> 0) + ((t8 & 2147483647) - ((t8 & 2147483648) >>> 0)) + ((x & 2147483647) - (x & 2147483648));
        t6 = b >= 0 ? C.JSInt_methods._shrOtherPositive$1(b, 16) : C.JSInt_methods._shrOtherPositive$1(b, 16) & 65535;
        c = (h & 65535) + (h0 & 65535) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0));
        t6 = c >= 0 ? C.JSInt_methods._shrOtherPositive$1(c, 16) : C.JSInt_methods._shrOtherPositive$1(c, 16) & 65535;
        t6 = (c & 65535 | (t7 & 2147483647) - ((t7 & 2147483648) >>> 0) + ((t9 & 2147483647) - ((t9 & 2147483648) >>> 0)) + ((t6 & 2147483647) - ((t6 & 2147483648) >>> 0)) << 16) >>> 0;
        ah[7] = t6;
        hh[7] = t6;
        t6 = (a & 65535 | b << 16) >>> 0;
        al[7] = t6;
        hl[7] = t6;
        pos += 128;
        n -= 128;
      }
      return n;
    },
    TweetNaCl__crypto_hash_off: function(out, m, moff, n) {
      var x, t1, hh, hl, n0, t2, i, t3, n1;
      if (n > 9007199254740992)
        throw H.wrapException(P.Exception_Exception("Maximum message length is 2^53"));
      x = new Uint8Array(256);
      t1 = type$.JSArray_int;
      hh = new Int32Array(H._ensureNativeList(H.setRuntimeTypeInfo([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], t1)));
      hl = new Int32Array(H._ensureNativeList(H.setRuntimeTypeInfo([4089235720, 2227873595, 4271175723, 1595750129, 2917565137, 725511199, 4215389547, 327033209], t1)));
      if (n >= 128) {
        U.TweetNaCl_crypto_hashblocks_hl(hh, hl, m, moff, n);
        n0 = C.JSInt_methods.$mod(n, 128);
      } else
        n0 = n;
      for (t1 = n - n0, t2 = J.getInterceptor$asx(m), i = 0; i < n0; ++i) {
        t3 = t2.$index(m, t1 + i + moff);
        if (i >= 256)
          return H.ioore(x, i);
        x[i] = t3;
      }
      if (n0 < 0 || n0 >= 256)
        return H.ioore(x, n0);
      x[n0] = 128;
      n1 = 256 - 128 * (n0 < 112 ? 1 : 0);
      t1 = n1 - 9;
      if (t1 < 0 || t1 >= 256)
        return H.ioore(x, t1);
      x[t1] = 0;
      U.TweetNaCl__ts64(x, n1 - 8, C.JSInt_methods._tdivFast$1(n, 536870912), n << 3 >>> 0);
      U.TweetNaCl_crypto_hashblocks_hl(hh, hl, x, 0, n1);
      for (t1 = hh.length, t2 = hl.length, i = 0; i < 8; ++i) {
        if (i >= t1)
          return H.ioore(hh, i);
        t3 = hh[i];
        if (i >= t2)
          return H.ioore(hl, i);
        U.TweetNaCl__ts64(out, 8 * i, t3, hl[i]);
      }
      return 0;
    },
    TweetNaCl__add: function(p, q) {
      var t1 = type$.int,
        a = P.List_List$filled(16, 0, false, t1),
        b = P.List_List$filled(16, 0, false, t1),
        c = P.List_List$filled(16, 0, false, t1),
        d = P.List_List$filled(16, 0, false, t1),
        t = P.List_List$filled(16, 0, false, t1),
        e = P.List_List$filled(16, 0, false, t1),
        f = P.List_List$filled(16, 0, false, t1),
        g = P.List_List$filled(16, 0, false, t1),
        h = P.List_List$filled(16, 0, false, t1),
        p0 = p[0],
        p1 = p[1],
        p2 = p[2],
        p3 = p[3],
        q0 = q[0],
        q1 = q[1],
        q2 = q[2],
        q3 = q[3];
      U.TweetNaCl__Z_off(a, 0, p1, 0, p0, 0);
      U.TweetNaCl__Z_off(t, 0, q1, 0, q0, 0);
      U.TweetNaCl__M_off(a, 0, a, 0, t, 0);
      U.TweetNaCl__A_off(b, 0, p0, 0, p1, 0);
      U.TweetNaCl__A_off(t, 0, q0, 0, q1, 0);
      U.TweetNaCl__M_off(b, 0, b, 0, t, 0);
      U.TweetNaCl__M_off(c, 0, p3, 0, q3, 0);
      U.TweetNaCl__M_off(c, 0, c, 0, P.List_List$from(C.List_ocR, t1), 0);
      U.TweetNaCl__M_off(d, 0, p2, 0, q2, 0);
      U.TweetNaCl__A_off(d, 0, d, 0, d, 0);
      U.TweetNaCl__Z_off(e, 0, b, 0, a, 0);
      U.TweetNaCl__Z_off(f, 0, d, 0, c, 0);
      U.TweetNaCl__A_off(g, 0, d, 0, c, 0);
      U.TweetNaCl__A_off(h, 0, b, 0, a, 0);
      U.TweetNaCl__M_off(p0, 0, e, 0, f, 0);
      U.TweetNaCl__M_off(p1, 0, h, 0, g, 0);
      U.TweetNaCl__M_off(p2, 0, g, 0, f, 0);
      U.TweetNaCl__M_off(p3, 0, e, 0, h, 0);
    },
    TweetNaCl__cswap: function(p, q, b) {
      var i;
      for (i = 0; i < 4; ++i)
        U.TweetNaCl__sel25519_off(p[i], 0, q[i], 0, b);
    },
    TweetNaCl__pack: function(r, p) {
      var t1 = type$.int,
        tx = P.List_List$filled(16, 0, false, t1),
        ty = P.List_List$filled(16, 0, false, t1),
        zi = P.List_List$filled(16, 0, false, t1);
      U.TweetNaCl__inv25519(zi, 0, p[2], 0);
      U.TweetNaCl__M_off(tx, 0, p[0], 0, zi, 0);
      U.TweetNaCl__M_off(ty, 0, p[1], 0, zi, 0);
      U.TweetNaCl__pack25519(r, ty, 0);
      if (31 >= r.length)
        return H.ioore(r, 31);
      r[31] = (r[31] ^ U.TweetNaCl__par25519_off(tx, 0) << 7) >>> 0;
    },
    TweetNaCl__scalarmult: function(p, q, s, soff) {
      var t1, i, t2, x, b;
      U.TweetNaCl__set25519(p[0], C.List_cGl0);
      U.TweetNaCl__set25519(p[1], C.List_cGl);
      U.TweetNaCl__set25519(p[2], C.List_cGl);
      U.TweetNaCl__set25519(p[3], C.List_cGl0);
      for (t1 = s.length, i = 255; i >= 0; --i) {
        t2 = C.JSInt_methods._tdivFast$1(i, 8) + soff;
        if (t2 < 0 || t2 >= t1)
          return H.ioore(s, t2);
        x = s[t2] >>> (i & 7);
        b = (x & 2147483647) - ((x & 2147483648) >>> 0) & 1;
        U.TweetNaCl__cswap(p, q, b);
        U.TweetNaCl__add(q, p);
        U.TweetNaCl__add(p, p);
        U.TweetNaCl__cswap(p, q, b);
      }
    },
    TweetNaCl__scalarbase: function(p, s, soff) {
      var q = P.List_List$generate(4, new U.TweetNaCl__scalarbase_closure(), type$.List_int);
      U.TweetNaCl__set25519(q[0], C.List_m4n);
      U.TweetNaCl__set25519(q[1], C.List_8lZ);
      U.TweetNaCl__set25519(q[2], C.List_cGl);
      U.TweetNaCl__M_off(q[3], 0, C.List_m4n, 0, C.List_8lZ, 0);
      U.TweetNaCl__scalarmult(p, q, s, soff);
    },
    TweetNaCl_crypto_sign_keypair: function(pk, sk, seed) {
      var t1, t2, i, t3,
        k = new Uint8Array(64),
        p = P.List_List$generate(4, new U.TweetNaCl_crypto_sign_keypair_closure(), type$.List_int);
      U.TweetNaCl__crypto_hash_off(k, seed, 0, 32);
      k[0] = k[0] & 248;
      k[31] = k[31] & 127;
      k[31] = k[31] | 64;
      U.TweetNaCl__scalarbase(p, k, 0);
      U.TweetNaCl__pack(pk, p);
      for (t1 = seed.length, t2 = sk.length, i = 0; i < 32; ++i) {
        if (i >= t1)
          return H.ioore(seed, i);
        t3 = seed[i];
        if (i >= t2)
          return H.ioore(sk, i);
        sk[i] = t3;
      }
      for (i = 0; i < 32; ++i) {
        t1 = i + 32;
        t3 = pk[i];
        if (t1 >= t2)
          return H.ioore(sk, t1);
        sk[t1] = t3;
      }
      for (i = 0; i < 64; ++i) {
        if (i >= 64)
          return H.ioore(k, i);
        k[i] = 0;
      }
      return 0;
    },
    TweetNaCl__modL: function(r, roff, x) {
      var i, j, t1, j0, carry, t2, t3, t4, i0;
      for (i = 63; i >= 32; --i) {
        for (j = i - 32, t1 = i - 12, j0 = j, carry = 0; j0 < t1; ++j0) {
          t2 = x[j0];
          t3 = x[i];
          t4 = j0 - j;
          if (t4 < 0 || t4 >= 32)
            return H.ioore(C.List_abQ, t4);
          C.JSArray_methods.$indexSet(x, j0, t2 + (carry - 16 * t3 * C.List_abQ[t4]));
          t4 = x[j0];
          carry = C.JSInt_methods._shrOtherPositive$1(t4 + 128, 8);
          C.JSArray_methods.$indexSet(x, j0, t4 - (carry << 8 >>> 0));
        }
        if (j0 >= 64)
          return H.ioore(x, j0);
        C.JSArray_methods.$indexSet(x, j0, x[j0] + carry);
        C.JSArray_methods.$indexSet(x, i, 0);
      }
      for (carry = 0, j = 0; j < 32; ++j) {
        C.JSArray_methods.$indexSet(x, j, x[j] + (carry - C.JSInt_methods._shrOtherPositive$1(x[31], 4) * C.List_abQ[j]));
        t1 = x[j];
        carry = C.JSInt_methods._shrOtherPositive$1(t1, 8);
        C.JSArray_methods.$indexSet(x, j, t1 & 255);
      }
      for (j = 0; j < 32; ++j)
        C.JSArray_methods.$indexSet(x, j, x[j] - carry * C.List_abQ[j]);
      for (t1 = r.length, i = 0; i < 32; i = i0) {
        i0 = i + 1;
        C.JSArray_methods.$indexSet(x, i0, x[i0] + C.JSInt_methods._shrOtherPositive$1(x[i], 8));
        t2 = i + roff;
        t3 = x[i];
        if (t2 >= t1)
          return H.ioore(r, t2);
        r[t2] = t3 & 255;
      }
    },
    TweetNaCl__reduce: function(r) {
      var i,
        x = P.List_List$filled(64, 0, false, type$.int);
      for (i = 0; i < 64; ++i)
        C.JSArray_methods.$indexSet(x, i, r[i] & 255);
      for (i = 0; i < 64; ++i) {
        if (i >= 64)
          return H.ioore(r, i);
        r[i] = 0;
      }
      U.TweetNaCl__modL(r, 0, x);
    },
    TweetNaCl_crypto_sign: function(sm, dummy, m, moff, n, sk) {
      var t1, t2, i, t3, t4, t5, j,
        d = new Uint8Array(64),
        h = new Uint8Array(64),
        r = new Uint8Array(64),
        x = P.List_List$filled(64, 0, false, type$.int),
        p = P.List_List$generate(4, new U.TweetNaCl_crypto_sign_closure(), type$.List_int);
      U.TweetNaCl__crypto_hash_off(d, sk, 0, 32);
      t1 = d[0];
      if (0 >= 64)
        return H.ioore(d, 0);
      d[0] = t1 & 248;
      t1 = d[31];
      if (31 >= 64)
        return H.ioore(d, 31);
      d[31] = t1 & 127;
      d[31] = d[31] | 64;
      for (t1 = m.length, t2 = sm.length, i = 0; i < n; ++i) {
        t3 = 64 + i;
        t4 = i + moff;
        if (t4 >= t1)
          return H.ioore(m, t4);
        t4 = m[t4];
        if (t3 >= t2)
          return H.ioore(sm, t3);
        sm[t3] = t4;
      }
      for (i = 0; i < 32; ++i) {
        t1 = 32 + i;
        t3 = d[t1];
        if (t1 >= t2)
          return H.ioore(sm, t1);
        sm[t1] = t3;
      }
      U.TweetNaCl__crypto_hash_off(r, sm, 32, n + 32);
      U.TweetNaCl__reduce(r);
      U.TweetNaCl__scalarbase(p, r, 0);
      U.TweetNaCl__pack(sm, p);
      for (t1 = sk._u8l._list, t3 = t1.length, i = 0; i < 32; ++i) {
        t4 = i + 32;
        if (t4 >= t3)
          return H.ioore(t1, t4);
        t5 = t1[t4];
        if (t4 >= t2)
          return H.ioore(sm, t4);
        sm[t4] = t5;
      }
      U.TweetNaCl__crypto_hash_off(h, sm, 0, n + 64);
      U.TweetNaCl__reduce(h);
      for (i = 0; i < 64; ++i)
        C.JSArray_methods.$indexSet(x, i, 0);
      for (i = 0; i < 32; ++i)
        C.JSArray_methods.$indexSet(x, i, r[i] & 255);
      for (i = 0; i < 32; ++i)
        for (j = 0; j < 32; ++j) {
          t1 = i + j;
          C.JSArray_methods.$indexSet(x, t1, x[t1] + (h[i] & 255) * (d[j] & 255));
        }
      U.TweetNaCl__modL(sm, 32, x);
      return 0;
    },
    TweetNaCl__unpackneg: function(r, p) {
      var t2, t3,
        t1 = type$.int,
        t = P.List_List$filled(16, 0, false, t1),
        chk = P.List_List$filled(16, 0, false, t1),
        inum = P.List_List$filled(16, 0, false, t1),
        den = P.List_List$filled(16, 0, false, t1),
        den2 = P.List_List$filled(16, 0, false, t1),
        den4 = P.List_List$filled(16, 0, false, t1),
        den6 = P.List_List$filled(16, 0, false, t1);
      U.TweetNaCl__set25519(r[2], C.List_cGl);
      U.TweetNaCl__unpack25519(r[1], p);
      t2 = r[1];
      U.TweetNaCl__M_off(inum, 0, t2, 0, t2, 0);
      U.TweetNaCl__M_off(den, 0, inum, 0, P.List_List$from(C.List_Cna, t1), 0);
      U.TweetNaCl__Z_off(inum, 0, inum, 0, r[2], 0);
      U.TweetNaCl__A_off(den, 0, r[2], 0, den, 0);
      U.TweetNaCl__M_off(den2, 0, den, 0, den, 0);
      U.TweetNaCl__M_off(den4, 0, den2, 0, den2, 0);
      U.TweetNaCl__M_off(den6, 0, den4, 0, den2, 0);
      U.TweetNaCl__M_off(t, 0, den6, 0, inum, 0);
      U.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      U.TweetNaCl__pow2523(t, t);
      U.TweetNaCl__M_off(t, 0, t, 0, inum, 0);
      U.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      U.TweetNaCl__M_off(t, 0, t, 0, den, 0);
      U.TweetNaCl__M_off(r[0], 0, t, 0, den, 0);
      t2 = r[0];
      U.TweetNaCl__M_off(chk, 0, t2, 0, t2, 0);
      U.TweetNaCl__M_off(chk, 0, chk, 0, den, 0);
      if (U.TweetNaCl__neq25519_off(chk, 0, inum, 0) !== 0) {
        t2 = r[0];
        U.TweetNaCl__M_off(t2, 0, t2, 0, P.List_List$from(C.List_O0Z, t1), 0);
      }
      t2 = r[0];
      U.TweetNaCl__M_off(chk, 0, t2, 0, t2, 0);
      U.TweetNaCl__M_off(chk, 0, chk, 0, den, 0);
      if (U.TweetNaCl__neq25519_off(chk, 0, inum, 0) !== 0)
        return -1;
      t2 = U.TweetNaCl__par25519_off(r[0], 0);
      t3 = p._u8l._list;
      if (31 >= t3.length)
        return H.ioore(t3, 31);
      if (t2 === U.TweetNaCl__shr32(t3[31] & 255, 7))
        U.TweetNaCl__Z_off(r[0], 0, P.List_List$from(C.List_cGl0, t1), 0, r[0], 0);
      U.TweetNaCl__M_off(r[3], 0, r[0], 0, r[1], 0);
      return 0;
    },
    TweetNaCl_crypto_sign_open: function(m, dummy, sm, smoff, n, pk) {
      var t2, i, t3, t4, t5,
        t = new Uint8Array(32),
        h = new Uint8Array(64),
        t1 = type$.List_int,
        p = P.List_List$generate(4, new U.TweetNaCl_crypto_sign_open_closure(), t1),
        q = P.List_List$generate(4, new U.TweetNaCl_crypto_sign_open_closure0(), t1);
      if (n < 64)
        return -1;
      if (U.TweetNaCl__unpackneg(q, pk) !== 0)
        return -1;
      for (t1 = sm.length, t2 = m.length, i = 0; i < n; ++i) {
        t3 = i + smoff;
        if (t3 >= t1)
          return H.ioore(sm, t3);
        t3 = sm[t3];
        if (i >= t2)
          return H.ioore(m, i);
        m[i] = t3;
      }
      for (t1 = pk._u8l._list, t3 = t1.length, i = 0; i < 32; ++i) {
        t4 = i + 32;
        if (i >= t3)
          return H.ioore(t1, i);
        t5 = t1[i];
        if (t4 >= t2)
          return H.ioore(m, t4);
        m[t4] = t5;
      }
      U.TweetNaCl__crypto_hash_off(h, m, 0, n);
      U.TweetNaCl__reduce(h);
      U.TweetNaCl__scalarmult(p, q, h, 0);
      U.TweetNaCl__scalarbase(q, sm, 32 + smoff);
      U.TweetNaCl__add(p, q);
      U.TweetNaCl__pack(t, p);
      if (U.TweetNaCl__vn(sm, smoff, t, 0, 32) !== 0)
        return -1;
      return 0;
    },
    TweetNaCl__randombytes_array: function(x) {
      var t1, rnd, i, iter;
      for (t1 = x.length, rnd = 0, i = 0; i < t1; ++i) {
        iter = C.JSInt_methods.$mod(i, 4);
        if (iter === 0)
          rnd = $.$get$TweetNaCl__krandom().nextInt$1(4294967296);
        x[i] = C.JSInt_methods._shrBothPositive$1(rnd, 8 * iter) & 255;
      }
      return x;
    },
    TweetNaCl__scalarbase_closure: function TweetNaCl__scalarbase_closure() {
    },
    TweetNaCl_crypto_sign_keypair_closure: function TweetNaCl_crypto_sign_keypair_closure() {
    },
    TweetNaCl_crypto_sign_closure: function TweetNaCl_crypto_sign_closure() {
    },
    TweetNaCl_crypto_sign_open_closure: function TweetNaCl_crypto_sign_open_closure() {
    },
    TweetNaCl_crypto_sign_open_closure0: function TweetNaCl_crypto_sign_open_closure0() {
    }
  },
  M = {
    main: function() {
      var forgedMessage, signed, verifyKey, e, t1, seed, priv, signingKey, t2, sm, verifyKey0, sublistLength, result, verifyKeyHex, exception, _null = null,
        _s17_ = "The list length (";
      P.print("\n### Digital Signatures - Signing Example ###\n");
      t1 = U.TweetNaCl__randombytes_array(new Uint8Array(32));
      if (t1.length !== 32)
        H.throwExpression(P.Exception_Exception("SigningKey must be created from a 32 byte seed"));
      seed = C.NativeUint8List_methods.toList$0(t1);
      priv = new Uint8Array(H._ensureNativeList(C.JSArray_methods.$add(seed, P.List_List$filled(32, 0, false, type$.int))));
      U.TweetNaCl_crypto_sign_keypair(new Uint8Array(32), priv, new Uint8Array(H._ensureNativeList(seed)));
      t1 = K.SigningKey$fromValidBytes(priv);
      if (t1.get$length(t1) < 64 || t1.get$length(t1) > 64)
        H.throwExpression(P.Exception_Exception(_s17_ + t1.get$length(t1) + ") is invalid (min: 64, max: 64)"));
      t1 = new Uint8Array(H._ensureNativeList(t1.toList$0(t1)));
      signingKey = new K.SigningKey(_null, new P.UnmodifiableUint8ListView(t1));
      forgedMessage = "people see the things they want to see...";
      t2 = type$.List_int._as(new H.CodeUnits("People see the things they want to see..."));
      sm = new Uint8Array(105);
      if (U.TweetNaCl_crypto_sign(sm, -1, new Uint8Array(H._ensureNativeList(t2)), 0, 41, signingKey) !== 0)
        H.throwExpression(P.Exception_Exception("Signing the massage is failed"));
      signed = new K.SignedMessage(_null, new P.UnmodifiableUint8ListView(new Uint8Array(H._ensureNativeList(C.NativeUint8List_methods.toList$0(sm)))));
      verifyKey0 = signingKey._verifyKey;
      if (verifyKey0 == null) {
        t2 = t1.length;
        sublistLength = P.RangeError_checkValidRange(32, t2, t2) - 32;
        result = new Uint8Array(sublistLength);
        C.NativeUint8List_methods.setRange$4(result, 0, sublistLength, t1, 32);
        verifyKey0 = signingKey._verifyKey = K.VerifyKey$(F.ByteList$(result, sublistLength), 32);
      }
      verifyKey = verifyKey0;
      verifyKeyHex = C.C_HexCoder.encode$1(type$.ByteList._as(verifyKey));
      t1 = F.ByteList$(G.HexCoder__decode(verifyKeyHex), _null);
      t2 = F.ByteList$(G.HexCoder__decode(verifyKeyHex), _null)._u8l._list.length;
      if (t1.get$length(t1) < t2 || t1.get$length(t1) > t2)
        H.throwExpression(P.Exception_Exception(_s17_ + t1.get$length(t1) + ") is invalid (min: " + t2 + ", max: " + t2 + ")"));
      new Uint8Array(H._ensureNativeList(t1.toList$0(t1)));
      P.print('The "People see the things they want to see..." is successfully verified');
      t1 = type$.EncryptionMessage._as(signed);
      t2 = K.Signature$(F.ByteList$(H.SubListIterable$(t1, 0, 64, H._instanceType(t1)._eval$1("ListMixin.E")), 64));
      verifyKey.verify$2$message$signature(t1.get$suffix(), t2);
      t2 = signed;
      t2 = K.Signature$(F.ByteList$(H.SubListIterable$(t2, 0, t2.get$prefixLength(), H.instanceType(t2)._eval$1("ListMixin.E")), t2.get$prefixLength()));
      verifyKey.verify$2$message$signature(signed.get$suffix(), t2);
      try {
        t1 = signed;
        verifyKey.verify$2$message$signature(new H.CodeUnits(forgedMessage), K.Signature$(F.ByteList$(H.SubListIterable$(t1, 0, t1.get$prefixLength(), H.instanceType(t1)._eval$1("ListMixin.E")), t1.get$prefixLength())));
      } catch (exception) {
        t1 = H.unwrapException(exception);
        if (type$.Exception._is(t1)) {
          e = t1;
          P.print("Exception's successfully cought:\n" + H.S(e));
        } else
          throw exception;
      }
    }
  };
  var holders = [C, H, J, P, F, G, K, U, M];
  hunkHelpers.setFunctionNamesIfNecessary(holders);
  var $ = {};
  H.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    toString$0: function(receiver) {
      return "Instance of '" + H.Primitives_objectTypeName(receiver) + "'";
    }
  };
  J.JSBool.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    },
    $isbool: 1
  };
  J.JSNull.prototype = {
    toString$0: function(receiver) {
      return "null";
    }
  };
  J.JavaScriptObject.prototype = {
    toString$0: function(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0: function(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$JavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    }
  };
  J.JSArray.prototype = {
    add$1: function(receiver, value) {
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.fixed$length)
        H.throwExpression(P.UnsupportedError$("add"));
      receiver.push(value);
    },
    elementAt$1: function(receiver, index) {
      if (index < 0 || index >= receiver.length)
        return H.ioore(receiver, index);
      return receiver[index];
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    },
    toList$1$growable: function(receiver, growable) {
      var t1 = H.setRuntimeTypeInfo(receiver.slice(0), H._arrayInstanceType(receiver));
      return t1;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$iterator: function(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, H._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet: function(receiver, index, value) {
      H._arrayInstanceType(receiver)._precomputed1._as(value);
      if (!!receiver.immutable$list)
        H.throwExpression(P.UnsupportedError$("indexed set"));
      if (index >= receiver.length || index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    $add: function(receiver, other) {
      var t2, _i,
        t1 = H._arrayInstanceType(receiver);
      t1._eval$1("List<1>")._as(other);
      t1 = H.setRuntimeTypeInfo([], t1);
      for (t2 = receiver.length, _i = 0; _i < receiver.length; receiver.length === t2 || (0, H.throwConcurrentModificationError)(receiver), ++_i)
        this.add$1(t1, receiver[_i]);
      for (t2 = other.length, _i = 0; _i < other.length; other.length === t2 || (0, H.throwConcurrentModificationError)(other), ++_i)
        this.add$1(t1, other[_i]);
      return t1;
    },
    $isJSIndexable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current: function() {
      return this.$ti._precomputed1._as(this.__interceptors$_current);
    },
    moveNext$0: function() {
      var t2, _this = this,
        t1 = _this.__interceptors$_iterable,
        $length = t1.length;
      if (_this.__interceptors$_length !== $length)
        throw H.wrapException(H.throwConcurrentModificationError(t1));
      t2 = _this.__interceptors$_index;
      if (t2 >= $length) {
        _this.set$__interceptors$_current(null);
        return false;
      }
      _this.set$__interceptors$_current(t1[t2]);
      ++_this.__interceptors$_index;
      return true;
    },
    set$__interceptors$_current: function(_current) {
      this.__interceptors$_current = this.$ti._eval$1("1?")._as(_current);
    }
  };
  J.JSNumber.prototype = {
    toString$0: function(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    $mod: function(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      if (other < 0)
        return result - other;
      else
        return result + other;
    },
    _tdivFast$1: function(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1: function(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw H.wrapException(P.UnsupportedError$("Result of truncating division is " + H.S(quotient) + ": " + H.S(receiver) + " ~/ " + other));
    },
    $shl: function(receiver, other) {
      if (other < 0)
        throw H.wrapException(H.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1: function(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrBothPositive$1: function(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    $isnum: 1
  };
  J.JSInt.prototype = {$isint: 1};
  J.JSDouble.prototype = {};
  J.JSString.prototype = {
    codeUnitAt$1: function(receiver, index) {
      if (index < 0)
        throw H.wrapException(H.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        H.throwExpression(H.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add: function(receiver, other) {
      return receiver + other;
    },
    startsWith$1: function(receiver, pattern) {
      var otherLength = pattern.length;
      if (otherLength > receiver.length)
        return false;
      return pattern === receiver.substring(0, otherLength);
    },
    toString$0: function(receiver) {
      return receiver;
    },
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isPattern: 1,
    $isString: 1
  };
  H.LateError.prototype = {
    toString$0: function(_) {
      var t1 = "LateInitializationError: " + this._message;
      return t1;
    }
  };
  H.CodeUnits.prototype = {
    get$length: function(_) {
      return this._string.length;
    },
    $index: function(_, i) {
      return C.JSString_methods.codeUnitAt$1(this._string, i);
    }
  };
  H.EfficientLengthIterable.prototype = {};
  H.ListIterable.prototype = {
    get$iterator: function(_) {
      var _this = this;
      return new H.ListIterator(_this, _this.get$length(_this), H._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    toList$1$growable: function(_, growable) {
      return P.List_List$of(this, true, H._instanceType(this)._eval$1("ListIterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.SubListIterable.prototype = {
    get$_endIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex: function() {
      var $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length: function(_) {
      var endOrLength,
        $length = J.get$length$asx(this._iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      if (typeof endOrLength !== "number")
        return endOrLength.$sub();
      return endOrLength - t1;
    },
    elementAt$1: function(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw H.wrapException(P.IndexError$(index, _this, "index", null, null));
      return J.elementAt$1$ax(_this._iterable, realIndex);
    },
    toList$1$growable: function(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = _this.$ti._precomputed1;
        return growable ? J.JSArray_JSArray$growable(0, t1) : J.JSArray_JSArray$fixed(0, t1);
      }
      result = P.List_List$filled($length, t2.elementAt$1(t1, start), growable, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        C.JSArray_methods.$indexSet(result, i, t2.elementAt$1(t1, start + i));
        if (t2.get$length(t1) < end)
          throw H.wrapException(P.ConcurrentModificationError$(_this));
      }
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    }
  };
  H.ListIterator.prototype = {
    get$current: function() {
      var cur = this._current;
      return cur != null ? cur : this.$ti._precomputed1._as(cur);
    },
    moveNext$0: function() {
      var t3, _this = this,
        t1 = _this._iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this._length !== $length)
        throw H.wrapException(P.ConcurrentModificationError$(t1));
      t3 = _this._index;
      if (t3 >= $length) {
        _this.set$_current(null);
        return false;
      }
      _this.set$_current(t2.elementAt$1(t1, t3));
      ++_this._index;
      return true;
    },
    set$_current: function(_current) {
      this._current = this.$ti._eval$1("1?")._as(_current);
    }
  };
  H.FixedLengthListMixin.prototype = {};
  H.UnmodifiableListMixin.prototype = {};
  H.UnmodifiableListBase.prototype = {};
  H.ConstantMap.prototype = {
    toString$0: function(_) {
      return P.MapBase_mapToString(this);
    }
  };
  H.ConstantStringMap.prototype = {
    get$length: function(_) {
      return this.__js_helper$_length;
    },
    containsKey$1: function(key) {
      if ("__proto__" === key)
        return false;
      return this._jsObject.hasOwnProperty(key);
    },
    $index: function(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._fetch$1(key);
    },
    _fetch$1: function(key) {
      return this._jsObject[H._asString(key)];
    },
    forEach$1: function(_, f) {
      var keys, t2, i, key,
        t1 = H._instanceType(this);
      t1._eval$1("~(1,2)")._as(f);
      keys = this._keys;
      for (t2 = keys.length, t1 = t1._rest[1], i = 0; i < t2; ++i) {
        key = keys[i];
        f.call$2(key, t1._as(this._fetch$1(key)));
      }
    }
  };
  H.TypeErrorDecoder.prototype = {
    matchTypeError$1: function(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  H.NullError.prototype = {
    toString$0: function(_) {
      var t1 = this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + this.__js_helper$_message;
      return "NoSuchMethodError: method not found: '" + t1 + "' on null";
    }
  };
  H.JsNoSuchMethodError.prototype = {
    toString$0: function(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  H.UnknownJsTypeError.prototype = {
    toString$0: function(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  H.NullThrownFromJavaScriptException.prototype = {
    toString$0: function(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    },
    $isException: 1
  };
  H.Closure.prototype = {
    toString$0: function(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + H.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$$call: function() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  H.TearOffClosure.prototype = {};
  H.StaticClosure.prototype = {
    toString$0: function(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + H.unminifyOrTag($name) + "'";
    }
  };
  H.BoundClosure.prototype = {
    toString$0: function(_) {
      var receiver = this._receiver;
      if (receiver == null)
        receiver = this._self;
      return "Closure '" + H.S(this._name) + "' of " + ("Instance of '" + H.Primitives_objectTypeName(type$.Object._as(receiver)) + "'");
    }
  };
  H.RuntimeError.prototype = {
    toString$0: function(_) {
      return "RuntimeError: " + this.message;
    }
  };
  H.initHooks_closure.prototype = {
    call$1: function(o) {
      return this.getTag(o);
    },
    $signature: 1
  };
  H.initHooks_closure0.prototype = {
    call$2: function(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 2
  };
  H.initHooks_closure1.prototype = {
    call$1: function(tag) {
      return this.prototypeForTag(H._asString(tag));
    },
    $signature: 3
  };
  H.NativeTypedData.prototype = {
    _invalidPosition$3: function(receiver, position, $length, $name) {
      var t1 = P.RangeError$range(position, 0, $length, $name, null);
      throw H.wrapException(t1);
    },
    _checkPosition$3: function(receiver, position, $length, $name) {
      if (position >>> 0 !== position || position > $length)
        this._invalidPosition$3(receiver, position, $length, $name);
    }
  };
  H.NativeByteData.prototype = {
    _getUint32$2: function(receiver, byteOffset, littleEndian) {
      return receiver.getUint32(byteOffset, littleEndian);
    },
    _setUint32$3: function(receiver, byteOffset, value, littleEndian) {
      return receiver.setUint32(byteOffset, value, littleEndian);
    },
    $isByteData: 1
  };
  H.NativeTypedArray.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $isJSIndexable: 1,
    $isJavaScriptIndexingBehavior: 1
  };
  H.NativeTypedArrayOfInt.prototype = {
    setRange$4: function(receiver, start, end, iterable, skipCount) {
      var targetLength, count, sourceLength, source;
      type$.Iterable_int._as(iterable);
      targetLength = receiver.length;
      this._checkPosition$3(receiver, start, targetLength, "start");
      this._checkPosition$3(receiver, end, targetLength, "end");
      if (start > end)
        H.throwExpression(P.RangeError$range(start, 0, end, null, null));
      count = end - start;
      sourceLength = iterable.length;
      if (sourceLength - skipCount < count)
        H.throwExpression(P.StateError$("Not enough elements"));
      source = skipCount !== 0 || sourceLength !== count ? iterable.subarray(skipCount, skipCount + count) : iterable;
      receiver.set(source, start);
      return;
    },
    $isIterable: 1,
    $isList: 1
  };
  H.NativeInt32List.prototype = {
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    }
  };
  H.NativeUint8List.prototype = {
    get$length: function(receiver) {
      return receiver.length;
    },
    $index: function(receiver, index) {
      H._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isUint8List: 1
  };
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  H.Rti.prototype = {
    _eval$1: function(recipe) {
      return H._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1: function(typeOrTuple) {
      return H._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  H._FunctionParameters.prototype = {};
  H._Error.prototype = {
    toString$0: function(_) {
      return this.__rti$_message;
    }
  };
  H._TypeError.prototype = {};
  P.ListBase.prototype = {$isIterable: 1, $isList: 1};
  P.ListMixin.prototype = {
    get$iterator: function(receiver) {
      return new H.ListIterator(receiver, this.get$length(receiver), H.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
    },
    elementAt$1: function(receiver, index) {
      return this.$index(receiver, index);
    },
    forEach$1: function(receiver, action) {
      var $length, i;
      H.instanceType(receiver)._eval$1("~(ListMixin.E)")._as(action);
      $length = this.get$length(receiver);
      for (i = 0; i < $length; ++i) {
        action.call$1(this.$index(receiver, i));
        if ($length !== this.get$length(receiver))
          throw H.wrapException(P.ConcurrentModificationError$(receiver));
      }
    },
    toList$1$growable: function(receiver, growable) {
      var t1, first, result, i, _this = this;
      if (_this.get$length(receiver) === 0) {
        t1 = J.JSArray_JSArray$growable(0, H.instanceType(receiver)._eval$1("ListMixin.E"));
        return t1;
      }
      first = _this.$index(receiver, 0);
      result = P.List_List$filled(_this.get$length(receiver), first, true, H.instanceType(receiver)._eval$1("ListMixin.E"));
      for (i = 1; i < _this.get$length(receiver); ++i)
        C.JSArray_methods.$indexSet(result, i, _this.$index(receiver, i));
      return result;
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    $add: function(receiver, other) {
      var t2, t3, cur,
        t1 = H.instanceType(receiver);
      t1._eval$1("List<ListMixin.E>")._as(other);
      t2 = H.setRuntimeTypeInfo([], t1._eval$1("JSArray<ListMixin.E>"));
      for (t3 = new H.ListIterator(receiver, this.get$length(receiver), t1._eval$1("ListIterator<ListMixin.E>")), t1 = t1._eval$1("ListMixin.E"); t3.moveNext$0();) {
        cur = t3._current;
        C.JSArray_methods.add$1(t2, cur != null ? cur : t1._as(cur));
      }
      for (t1 = J.get$iterator$ax(other); t1.moveNext$0();)
        C.JSArray_methods.add$1(t2, t1.get$current());
      return t2;
    },
    toString$0: function(receiver) {
      return P.IterableBase_iterableToFullString(receiver, "[", "]");
    }
  };
  P.MapBase_mapToString_closure.prototype = {
    call$2: function(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = t1._contents += H.S(k);
      t1._contents = t2 + ": ";
      t1._contents += H.S(v);
    },
    $signature: 4
  };
  P._ListBase_Object_ListMixin.prototype = {};
  P.Error.prototype = {};
  P.AssertionError.prototype = {
    toString$0: function(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + P.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  P.TypeError.prototype = {};
  P.NullThrownError.prototype = {
    toString$0: function(_) {
      return "Throw of null.";
    }
  };
  P.ArgumentError.prototype = {
    get$_errorName: function() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation: function() {
      return "";
    },
    toString$0: function(_) {
      var explanation, errorValue, _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + H.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      explanation = _this.get$_errorExplanation();
      errorValue = P.Error_safeToString(_this.invalidValue);
      return prefix + explanation + ": " + errorValue;
    }
  };
  P.RangeError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + H.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + H.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + H.S(start) + ".." + H.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + H.S(start);
      return explanation;
    }
  };
  P.IndexError.prototype = {
    get$_errorName: function() {
      return "RangeError";
    },
    get$_errorExplanation: function() {
      if (H._asInt(this.invalidValue) < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length: function(receiver) {
      return this.length;
    }
  };
  P.UnsupportedError.prototype = {
    toString$0: function(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  P.UnimplementedError.prototype = {
    toString$0: function(_) {
      var t1 = "UnimplementedError: " + this.message;
      return t1;
    }
  };
  P.StateError.prototype = {
    toString$0: function(_) {
      return "Bad state: " + this.message;
    }
  };
  P.ConcurrentModificationError.prototype = {
    toString$0: function(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + P.Error_safeToString(t1) + ".";
    }
  };
  P.StackOverflowError.prototype = {
    toString$0: function(_) {
      return "Stack Overflow";
    },
    $isError: 1
  };
  P.CyclicInitializationError.prototype = {
    toString$0: function(_) {
      var t1 = "Reading static variable '" + this.variableName + "' during its initialization";
      return t1;
    }
  };
  P._Exception.prototype = {
    toString$0: function(_) {
      return "Exception: " + this.message;
    },
    $isException: 1
  };
  P.Iterable.prototype = {
    toList$1$growable: function(_, growable) {
      return P.List_List$of(this, true, H._instanceType(this)._eval$1("Iterable.E"));
    },
    toList$0: function($receiver) {
      return this.toList$1$growable($receiver, true);
    },
    get$length: function(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    elementAt$1: function(_, index) {
      var t1, elementIndex, element;
      P.RangeError_checkNotNegative(index, "index");
      for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
        element = t1.get$current();
        if (index === elementIndex)
          return element;
        ++elementIndex;
      }
      throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
    },
    toString$0: function(_) {
      return P.IterableBase_iterableToShortString(this, "(", ")");
    }
  };
  P.Null.prototype = {
    toString$0: function(_) {
      return "null";
    }
  };
  P.Object.prototype = {constructor: P.Object, $isObject: 1,
    toString$0: function(_) {
      return "Instance of '" + H.Primitives_objectTypeName(this) + "'";
    },
    toString: function() {
      return this.toString$0(this);
    }
  };
  P.StringBuffer.prototype = {
    get$length: function(_) {
      return this._contents.length;
    },
    toString$0: function(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  P._JSSecureRandom.prototype = {
    _JSSecureRandom$0: function() {
      var $crypto = self.crypto;
      if ($crypto != null)
        if ($crypto.getRandomValues != null)
          return;
      throw H.wrapException(P.UnsupportedError$("No source of cryptographically secure random numbers available."));
    },
    nextInt$1: function(max) {
      var byteCount, t1, start, randomLimit, t2, t3, t4, random, result, _null = null;
      if (max <= 0 || max > 4294967296)
        throw H.wrapException(new P.RangeError(_null, _null, false, _null, _null, "max must be in range 0 < max \u2264 2^32, was " + max));
      if (max > 255)
        if (max > 65535)
          byteCount = max > 16777215 ? 4 : 3;
        else
          byteCount = 2;
      else
        byteCount = 1;
      t1 = this._buffer;
      C.NativeByteData_methods._setUint32$3(t1, 0, 0, false);
      start = 4 - byteCount;
      randomLimit = H._asInt(Math.pow(256, byteCount));
      for (t2 = max - 1, t3 = (max & t2) >>> 0 === 0; true;) {
        t4 = t1.buffer;
        t4 = new Uint8Array(t4, start, byteCount);
        crypto.getRandomValues(t4);
        random = C.NativeByteData_methods._getUint32$2(t1, 0, false);
        if (t3)
          return (random & t2) >>> 0;
        result = random % max;
        if (random - result + max < randomLimit)
          return result;
      }
    }
  };
  P._UnmodifiableListMixin.prototype = {
    get$length: function(_) {
      return this._list.length;
    },
    $index: function(_, index) {
      var t1 = this._list;
      if (index < 0 || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    }
  };
  P.UnmodifiableUint8ListView.prototype = {$isUint8List: 1};
  P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin.prototype = {};
  F.AsymmetricKey.prototype = {};
  F.AsymmetricPublicKey.prototype = {};
  F.AsymmetricPrivateKey.prototype = {};
  F.ByteList.prototype = {
    get$length: function(_) {
      return this._u8l._list.length;
    },
    $index: function(_, index) {
      var t1 = this._u8l._list;
      if (index < 0 || index >= t1.length)
        return H.ioore(t1, index);
      return t1[index];
    },
    $isIterable: 1,
    $isList: 1,
    $isUint8List: 1
  };
  F.Suffix.prototype = {
    get$prefixLength: function() {
      var t1 = H.throwExpression(new H.LateError("Field 'prefixLength' has not been initialized."));
      return t1;
    },
    get$suffix: function() {
      var _this = this;
      return F.ByteList$(H.SubListIterable$(_this, _this.get$prefixLength(), null, H._instanceType(_this)._eval$1("ListMixin.E")), _this._u8l._list.length - _this.get$prefixLength());
    }
  };
  F.Encodable.prototype = {};
  F._AsymmetricKey_ByteList_Encodable.prototype = {};
  F._AsymmetricKey_ByteList_Encodable_Suffix.prototype = {};
  F._ByteList_Object_ListMixin.prototype = {};
  F._ByteList_Object_ListMixin_Encodable.prototype = {};
  G.HexCoder.prototype = {
    encode$1: function(data) {
      return G.HexCoder__encode(data);
    },
    $isEncoder: 1
  };
  G.HexCoder__encode_closure.prototype = {
    call$1: function(element) {
      var _s16_ = "0123456789abcdef",
        t1 = this._box_0;
      t1.result = t1.result + (_s16_[element >>> 4 & 15] + _s16_[element & 15]);
    },
    $signature: 5
  };
  K.Signature.prototype = {$isSignatureBase: 1};
  K.VerifyKey.prototype = {
    verify$2$message$signature: function(message, signature) {
      var t1,
        _s18_ = "Signature length (",
        _s27_ = ') is invalid, expected "64"';
      type$.List_int._as(message);
      if (signature._u8l._list.length !== 64)
        throw H.wrapException(P.Exception_Exception(_s18_ + signature.get$length(signature) + _s27_));
      message = signature.$add(signature, message);
      t1 = message.length;
      if (t1 < 64)
        throw H.wrapException(P.Exception_Exception(_s18_ + t1 + _s27_));
      if (U.TweetNaCl_crypto_sign_open(new Uint8Array(t1), -1, new Uint8Array(H._ensureNativeList(message)), 0, message.length, this) !== 0)
        throw H.wrapException(P.Exception_Exception("The message is forged or malformed or the signature is invalid"));
      return true;
    }
  };
  K.SigningKey.prototype = {};
  K.SignedMessage.prototype = {$isEncryptionMessage: 1,
    get$prefixLength: function() {
      return 64;
    }
  };
  K._SignedMessage_ByteList_Suffix.prototype = {};
  U.TweetNaCl__scalarbase_closure.prototype = {
    call$1: function(_) {
      return P.List_List$filled(16, 0, false, type$.int);
    },
    $signature: 0
  };
  U.TweetNaCl_crypto_sign_keypair_closure.prototype = {
    call$1: function(_) {
      return P.List_List$filled(16, 0, false, type$.int);
    },
    $signature: 0
  };
  U.TweetNaCl_crypto_sign_closure.prototype = {
    call$1: function(_) {
      return P.List_List$filled(16, 0, false, type$.int);
    },
    $signature: 0
  };
  U.TweetNaCl_crypto_sign_open_closure.prototype = {
    call$1: function(_) {
      return P.List_List$filled(16, 0, false, type$.int);
    },
    $signature: 0
  };
  U.TweetNaCl_crypto_sign_open_closure0.prototype = {
    call$1: function(_) {
      return P.List_List$filled(16, 0, false, type$.int);
    },
    $signature: 0
  };
  (function aliases() {
    var _ = J.JavaScriptObject.prototype;
    _.super$JavaScriptObject$toString = _.toString$0;
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(P.Object, null);
    _inheritMany(P.Object, [H.JS_CONST, J.Interceptor, J.ArrayIterator, P.Error, P._ListBase_Object_ListMixin, P.Iterable, H.ListIterator, H.FixedLengthListMixin, H.UnmodifiableListMixin, H.ConstantMap, H.TypeErrorDecoder, H.NullThrownFromJavaScriptException, H.Closure, H.Rti, H._FunctionParameters, P.ListMixin, P.StackOverflowError, P._Exception, P.Null, P.StringBuffer, P._JSSecureRandom, P._UnmodifiableListMixin, F._ByteList_Object_ListMixin, F.Suffix, F.Encodable, G.HexCoder]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, H.NativeTypedData]);
    _inheritMany(J.JavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSDouble]);
    _inheritMany(P.Error, [H.LateError, P.TypeError, H.JsNoSuchMethodError, H.UnknownJsTypeError, H.RuntimeError, H._Error, P.AssertionError, P.NullThrownError, P.ArgumentError, P.UnsupportedError, P.UnimplementedError, P.StateError, P.ConcurrentModificationError, P.CyclicInitializationError]);
    _inherit(P.ListBase, P._ListBase_Object_ListMixin);
    _inherit(H.UnmodifiableListBase, P.ListBase);
    _inheritMany(H.UnmodifiableListBase, [H.CodeUnits, P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin]);
    _inherit(H.EfficientLengthIterable, P.Iterable);
    _inherit(H.ListIterable, H.EfficientLengthIterable);
    _inherit(H.SubListIterable, H.ListIterable);
    _inherit(H.ConstantStringMap, H.ConstantMap);
    _inherit(H.NullError, P.TypeError);
    _inheritMany(H.Closure, [H.TearOffClosure, H.initHooks_closure, H.initHooks_closure0, H.initHooks_closure1, P.MapBase_mapToString_closure, G.HexCoder__encode_closure, U.TweetNaCl__scalarbase_closure, U.TweetNaCl_crypto_sign_keypair_closure, U.TweetNaCl_crypto_sign_closure, U.TweetNaCl_crypto_sign_open_closure, U.TweetNaCl_crypto_sign_open_closure0]);
    _inheritMany(H.TearOffClosure, [H.StaticClosure, H.BoundClosure]);
    _inheritMany(H.NativeTypedData, [H.NativeByteData, H.NativeTypedArray]);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, H.NativeTypedArray);
    _inherit(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(H.NativeTypedArrayOfInt, H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(H.NativeTypedArrayOfInt, [H.NativeInt32List, H.NativeUint8List]);
    _inherit(H._TypeError, H._Error);
    _inheritMany(P.ArgumentError, [P.RangeError, P.IndexError]);
    _inherit(P.UnmodifiableUint8ListView, P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin);
    _inherit(F._ByteList_Object_ListMixin_Encodable, F._ByteList_Object_ListMixin);
    _inherit(F.ByteList, F._ByteList_Object_ListMixin_Encodable);
    _inheritMany(F.ByteList, [F._AsymmetricKey_ByteList_Encodable, K.Signature, K._SignedMessage_ByteList_Suffix]);
    _inherit(F._AsymmetricKey_ByteList_Encodable_Suffix, F._AsymmetricKey_ByteList_Encodable);
    _inherit(F.AsymmetricKey, F._AsymmetricKey_ByteList_Encodable_Suffix);
    _inheritMany(F.AsymmetricKey, [F.AsymmetricPublicKey, F.AsymmetricPrivateKey]);
    _inherit(K.VerifyKey, F.AsymmetricPublicKey);
    _inherit(K.SigningKey, F.AsymmetricPrivateKey);
    _inherit(K.SignedMessage, K._SignedMessage_ByteList_Suffix);
    _mixin(H.UnmodifiableListBase, H.UnmodifiableListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, P.ListMixin);
    _mixin(H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, H.FixedLengthListMixin);
    _mixin(P._ListBase_Object_ListMixin, P.ListMixin);
    _mixin(P._UnmodifiableUint8ListView_UnmodifiableListBase__UnmodifiableListMixin, P._UnmodifiableListMixin);
    _mixin(F._AsymmetricKey_ByteList_Encodable, F.Encodable);
    _mixin(F._AsymmetricKey_ByteList_Encodable_Suffix, F.Suffix);
    _mixin(F._ByteList_Object_ListMixin, P.ListMixin);
    _mixin(F._ByteList_Object_ListMixin_Encodable, F.Encodable);
    _mixin(K._SignedMessage_ByteList_Suffix, F.Suffix);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
    mangledNames: {},
    getTypeFromName: getGlobalFromName,
    metadata: [],
    types: ["List<int>(int)", "@(@)", "@(@,String)", "@(String)", "~(Object?,Object?)", "~(int)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: typeof Symbol == "function" && typeof Symbol() == "symbol" ? Symbol("$ti") : "$ti"
  };
  H._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"JavaScriptObject","PlainJavaScriptObject":"JavaScriptObject","UnknownJavaScriptObject":"JavaScriptObject","JSBool":{"bool":[]},"JSArray":{"List":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSNumber":{"num":[]},"JSInt":{"int":[],"num":[]},"JSDouble":{"num":[]},"JSString":{"String":[],"Pattern":[],"JSIndexable":["@"]},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"Iterable":["1"],"ListIterable.E":"1","Iterable.E":"1"},"UnmodifiableListBase":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"Iterable":["1"]},"ConstantStringMap":{"ConstantMap":["1","2"]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"NullThrownFromJavaScriptException":{"Exception":[]},"RuntimeError":{"Error":[]},"NativeByteData":{"ByteData":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JSIndexable":["1"]},"NativeTypedArrayOfInt":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeInt32List":{"NativeTypedArray":["int"],"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"NativeUint8List":{"NativeTypedArray":["int"],"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int"},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"ListBase":{"ListMixin":["1"],"List":["1"],"Iterable":["1"]},"int":{"num":[]},"List":{"Iterable":["1"]},"String":{"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"_Exception":{"Exception":[]},"UnmodifiableUint8ListView":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"AsymmetricKey":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"]},"AsymmetricPublicKey":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"]},"AsymmetricPrivateKey":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"]},"ByteList":{"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"HexCoder":{"Encoder":[]},"Signature":{"SignatureBase":[],"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"VerifyKey":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"SigningKey":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"ListMixin.E":"int"},"SignedMessage":{"ByteList":[],"ListMixin":["int"],"Uint8List":[],"List":["int"],"Iterable":["int"],"EncryptionMessage":[],"ListMixin.E":"int"}}'));
  H._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"UnmodifiableListBase":1,"NativeTypedArray":1,"ListBase":1,"_ListBase_Object_ListMixin":1,"_UnmodifiableListMixin":3}'));
  0;
  var type$ = (function rtii() {
    var findType = H.findType;
    return {
      ByteList: findType("ByteList"),
      EncryptionMessage: findType("EncryptionMessage"),
      Error: findType("Error"),
      Exception: findType("Exception"),
      Function: findType("Function"),
      Iterable_dynamic: findType("Iterable<@>"),
      Iterable_int: findType("Iterable<int>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSIndexable_dynamic: findType("JSIndexable<@>"),
      JSNull: findType("JSNull"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      List_int: findType("List<int>"),
      Null: findType("Null"),
      Object: findType("Object"),
      String: findType("String"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_Object: findType("Object?"),
      num: findType("num")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    C.Interceptor_methods = J.Interceptor.prototype;
    C.JSArray_methods = J.JSArray.prototype;
    C.JSInt_methods = J.JSInt.prototype;
    C.JSString_methods = J.JSString.prototype;
    C.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    C.NativeByteData_methods = H.NativeByteData.prototype;
    C.NativeUint8List_methods = H.NativeUint8List.prototype;
    C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    C.C_HexCoder = new G.HexCoder();
    C.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    C.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    C.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    C.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    C.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    C.C_JS_CONST5 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    C.C_JS_CONST4 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    C.C_JS_CONST3 = function(hooks) { return hooks; }
;
    C.List_8lZ = H.setRuntimeTypeInfo(makeConstList([26200, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214, 26214]), type$.JSArray_int);
    C.List_Cna = H.setRuntimeTypeInfo(makeConstList([30883, 4953, 19914, 30187, 55467, 16705, 2637, 112, 59544, 30585, 16505, 36039, 65139, 11119, 27886, 20995]), type$.JSArray_int);
    C.List_O0Z = H.setRuntimeTypeInfo(makeConstList([41136, 18958, 6951, 50414, 58488, 44335, 6150, 12099, 55207, 15867, 153, 11085, 57099, 20417, 9344, 11139]), type$.JSArray_int);
    C.List_abQ = H.setRuntimeTypeInfo(makeConstList([237, 211, 245, 92, 26, 99, 18, 88, 214, 156, 247, 162, 222, 249, 222, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16]), type$.JSArray_int);
    C.List_cGl0 = H.setRuntimeTypeInfo(makeConstList([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), type$.JSArray_int);
    C.List_cGl = H.setRuntimeTypeInfo(makeConstList([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), type$.JSArray_int);
    C.List_i7B = H.setRuntimeTypeInfo(makeConstList([1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]), type$.JSArray_int);
    C.List_m4n = H.setRuntimeTypeInfo(makeConstList([54554, 36645, 11616, 51542, 42930, 38181, 51040, 26924, 56412, 64982, 57905, 49316, 21502, 52590, 14035, 8553]), type$.JSArray_int);
    C.List_ocR = H.setRuntimeTypeInfo(makeConstList([61785, 9906, 39828, 60374, 45398, 33411, 5274, 224, 53552, 61171, 33010, 6542, 64743, 22239, 55772, 9222]), type$.JSArray_int);
    C.List_GDx = H.setRuntimeTypeInfo(makeConstList(["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]), type$.JSArray_String);
    C.Map_GD2No = new H.ConstantStringMap(22, {"0": 0, "1": 1, "2": 2, "3": 3, "4": 4, "5": 5, "6": 6, "7": 7, "8": 8, "9": 9, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15}, C.List_GDx, H.findType("ConstantStringMap<String,int>"));
  })();
  (function staticFields() {
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.Closure_functionCounter = 0;
    $.BoundClosure_selfFieldNameCache = null;
    $.BoundClosure_receiverFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._toStringVisiting = H.setRuntimeTypeInfo([], H.findType("JSArray<Object>"));
    $.Random__secureRandom = null;
  })();
  (function lazyInitializers() {
    var _lazyFinal = hunkHelpers.lazyFinal;
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", function() {
      return H.getIsolateAffinityTag("_$dart_dartClosure");
    });
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
        toString: function() {
          return "$receiver$";
        }
      }));
    });
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
    });
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          null.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        var $argumentsExpr$ = '$arguments$';
        try {
          (void 0).$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
    });
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          null.$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
    });
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
      return H.TypeErrorDecoder_extractPattern(function() {
        try {
          (void 0).$method$;
        } catch (e) {
          return e.message;
        }
      }());
    });
    _lazyFinal($, "TweetNaCl__krandom", "$get$TweetNaCl__krandom", function() {
      var t1 = $.Random__secureRandom;
      if (t1 == null) {
        t1 = new P._JSSecureRandom(new DataView(new ArrayBuffer(H._checkLength(8))));
        t1._JSSecureRandom$0();
        $.Random__secureRandom = t1;
      }
      return t1;
    });
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: J.Interceptor, ArrayBufferView: H.NativeTypedData, DataView: H.NativeByteData, Int32Array: H.NativeInt32List, Uint8Array: H.NativeUint8List});
    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, ArrayBufferView: false, DataView: true, Int32Array: true, Uint8Array: false});
    H.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    H.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != 'undefined') {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(M.main, []);
    else
      M.main([]);
  });
})();

//# sourceMappingURL=signature.js.map
